S0 = theory { 
 sorts
 	Person, Image, String;
 symbols
 	cn, dn, rn, pn, jn : String,
 	ci, di, ri, ji : Image,
 	picture : Person -> Image,
 	name : Person -> String;
 equations;
}

S = schema {
	entities Person;	
} : S0

T = types S

I0 = presentation {
	generators c, d, r, p, j : Person;
	equations picture(d) = di, picture(r) = ri, picture(j) = ji, picture(c) = ci,
			name(p) = pn, name(d) = dn, name(r) = rn, name(c) = cn, name(j) = jn;
} : S0

M = javascript {
	symbols
	    _preamble -> "var image = Java.type('catdata.opl.OplImage');",
		ri -> "return new image('http://wisnesky.net/pic.jpg')",						
		di -> "return new image('http://math.mit.edu/images/gallery/postdoc/spivak-david.jpg')",
		ci -> "return new image('http://math.mit.edu/images/gallery/postdoc/vasilakopoulou.png')",
		ji -> "return new image('http://www.joshuatan.com/wp-content/uploads/2014/11/cropped-IMG-0823.jpg')",
		rn -> "return 'Ryan'",
		dn -> "return 'David'",
		pn -> "return 'Patrick'",
		cn -> "return 'Christina'",
		jn -> "return 'Josh'"
		;			
} : T

I = instance S I0 M
