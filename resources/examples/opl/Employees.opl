S = theory { 
 sorts
 	Employee, Department, dom;
 symbols
     first,last: Employee -> dom,
     name 	: Department -> dom,
	manager   : Employee -> Employee,
	worksIn   : Employee -> Department,
	secretary : Department -> Employee;
 equations  
  	forall x. worksIn(manager(x)) = worksIn(x),
  	forall x. worksIn(secretary(x)) = x,
  	forall x. manager(manager(x)) = manager(x);
}

I = presentation {
	generators a, b, c : Employee, 
	          m, s : Department,
	          Al, Akin, Bob, Bo, Carl, Cork, Math, Cs : dom;
	equations first(a) = Al,   last(a) = Akin,
			first(b) = Bob,  last(b) = Bo,
			first(c) = Carl, last(c) = Cork,
			name(m)  = Math, name(s) = Cs,
			worksIn(a) = m,  worksIn(b) = m,  worksIn(c) = s,
			secretary(s) = c, secretary(m) = b;
} : S

J = saturate I
K = unsaturate J
L = saturate K

C = schema {
	entities Employee, Department;
} : S

Q = query {
	 qE = {for e:Employee; 
	 	  where; 
	 	  return first=first(e), last=last(e); 
	 	  keys manager = {e=manager(e)} : qE, worksIn = {d=worksIn(e)} : qD;} : Employee,
	 qD = {for d:Department; 
	 	  where; 
	 	  return name=name(d); 
	 	  keys secretary = {e=secretary(d)} : qE;} : Department
} : C -> C

Q0 = id C
