Graph = schema {
	nodes arrow,vertex;
	edges src:arrow->vertex,tgt:arrow->vertex;
	equations;
}

//has 4 connected components
G = instance {
	variables 
		a b c d e : arrow,
		t u v w x y z : vertex;
	equations
		a.src = t, b.src = t, c.src = x, d.src = y, e.src = z,
		a.tgt = u, b.tgt = v, c.tgt = x, d.tgt = z, e.tgt = y;
} : Graph

Terminal = schema {
	nodes X;
	edges;
	equations;
} 

F = mapping {
	nodes arrow->X, vertex->X;
	edges src->X, tgt->X;
} : Graph -> Terminal

//has 4 rows
Components = sigma F G

//puts 4 rows into vertex, 4 rows into arrow, corresponding to the connected components
I = delta F Components

//gives the transform from the original graph to the connected components
t = return sigma delta F G

u = coreturn sigma delta F Components
