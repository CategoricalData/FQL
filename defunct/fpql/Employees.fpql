dom : type
Al Akin Bob Bo Carl Cork Math Cs : dom

S = schema { 
 nodes
 	Employee, Department;
 edges
     first 	: Employee -> dom,
     last		: Employee -> dom,
     name 	: Department -> dom,
	manager   : Employee -> Employee,
	worksIn   : Employee -> Department,
	secretary : Department -> Employee;
 equations  
  	Employee.manager.worksIn = Employee.worksIn,
  	Department.secretary.worksIn = Department,
  	Employee.manager.manager = Employee.manager;
}

I = instance {
	variables a b c : Employee, m s : Department;
	equations a.first = Al, a.last = Akin,
			b.first = Bob, b.last = Bo,
			c.first = Carl, c.last = Cork,
			m.name = Math, s.name = Cs,
			a.worksIn = m, b.worksIn = m, c.worksIn = s,
			s.secretary=c, m.secretary=b;
} : S

//////////////////////////////////////////////

String : type
Int : type

one : Int
two : Int
foo : String

//length : String -> Int
print : Int -> String
//succ : Int -> Int
reverse : String -> String

eq1 : reverse.reverse = String 

X = schema { 
      nodes n;
      edges f : n -> n, g : n -> String, h : n -> Int;
      equations n.f.f = f, f.g = f.g.reverse;
}
