string : type
Ryan Wisnesky David Spivak Harvard MIT Leslie : string

C = schema {
 nodes 
 	c1, 
 	c2;
 edges
	att1 : c1 -> string,
	att2 : c1 -> string, 
	att3 : c2 -> string;
 equations;
}

I = instance {
 variables
	v11 v12 : c1,
	v21 v22 v23 : c2;
 equations
	v11.att1 = David, v12.att1 = Ryan,
	v11.att2 = Spivak, v12.att2 = Wisnesky,
	v21.att3 = MIT, v22.att3 = Harvard, v23.att3 = Leslie;
} : C 

D = schema {
 nodes
 	d;
 edges
 	a1 : d -> string, 
 	a2 : d -> string, 
 	a3 : d -> string;
 equations;
}

F = mapping {
 nodes 
 	c1 -> d,
 	c2 -> d;
 edges
	att1 -> d.a1, 
	att2 -> d.a2,
	att3 -> d.a3;
} : C -> D

J = pi F I


I0 = instance {
 variables
	u11:c1,
	u21 u22:c2;
 equations
	u11.att1 = David,
	u11.att2 = Spivak, 
	u21.att3 = MIT, u22.att3 = Harvard;
} : C 

t = homomorphism {
     variables u11 -> v11, u21 -> v21, u22 -> v22;
} : I0 -> I

tx = pi F t

XXX = instance {
 variables a b c : d;
 equations 
  a.a1 = Harvard, b.a1 = Harvard, c.a1 = Harvard,
  a.a2 = MIT, b.a2 = MIT, c.a2 = MIT,
  a.a3 = Leslie, b.a3 = Leslie, c.a3 = Leslie;
} : D

ret = return delta pi F XXX

coret = coreturn delta pi F I
