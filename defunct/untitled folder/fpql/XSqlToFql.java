package catdata.fpql;

import java.awt.BorderLayout;
import java.awt.Dimension;
import java.awt.GridLayout;
import java.awt.event.ActionEvent;
import java.util.Map;
import java.util.HashMap;
import java.util.HashSet;
import java.util.LinkedList;
import java.util.List;
import java.util.Set;
import java.util.stream.Collectors;

import javax.swing.BorderFactory;
import javax.swing.JButton;
import javax.swing.JComboBox;
import javax.swing.JDialog;
import javax.swing.JFrame;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.JScrollPane;
import javax.swing.JSplitPane;
import javax.swing.JTextArea;
import javax.swing.JTextField;
import javax.swing.ScrollPaneConstants;
import javax.swing.SwingConstants;

import catdata.fpql.XExp.Var;
import org.jparsec.Parser;
import org.jparsec.Parsers;
import org.jparsec.Scanners;
import org.jparsec.Terminals;
import org.jparsec.Terminals.Identifier;
import org.jparsec.Terminals.IntegerLiteral;
import org.jparsec.Terminals.StringLiteral;
import org.jparsec.functors.Tuple3;
import org.jparsec.functors.Tuple4;
import org.jparsec.functors.Tuple5;

import catdata.Pair;
import catdata.Triple;
import catdata.Util;
import catdata.fpql.XExp.XInst;
import catdata.fpql.XExp.XSchema;
import catdata.ide.CodeTextPanel;
import catdata.ide.Example;

/**
 * 
 * @author ryan
 *
 * Translates SQL schemas (in categorical normal form) to FQL.
 */
@SuppressWarnings("deprecation")
public class XSqlToFql {

	private final Example[] examples = { new PeopleExample() /* new GlobalSpec(), new Thomas() */, new A(), new B() };

	private final String help = "SQL schemas and instances in categorical normal form (CNF) can be treated as FQL instances directly.  To be in CNF, every table must have a primary key column called id.  This column will be treated as a meaningless ID.  Every column in a table must either be a string, an integer, or a foreign key to another table.  Inserted values must be quoted.  See the People example for details.";

	private static String kind() {
		return "SQL Schema";
	}
	
	static class A extends Example {
		
		@Override
		public String getName() {
			return "A";
		}
		@Override
		public String getText() {
			return XSqlToFql.a_str2;
		}
	}
	
	static class B extends Example {
		
		@Override
		public String getName() {
			return "B";
		}
		@Override
		public String getText() {
			return XSqlToFql.b_str;
		}
	}
	
	static class PeopleExample extends Example {
		
		@Override
		public String getName() {
			return "People";
		}

		@Override
		public String getText() {
			return extext1;
		}
	}

	private static String translate(String in, String depth) {
		List<EExternal> list = program(in);
		return transSQLSchema(list, Integer.parseInt(depth));
	}

	public XSqlToFql() {
		CodeTextPanel input = new CodeTextPanel(BorderFactory.createEtchedBorder(), kind() + " Input", "");
		CodeTextPanel output = new CodeTextPanel(BorderFactory.createEtchedBorder(), "FPQL Output", "");

		JTextField depth = new JTextField("4");
		
		JButton transButton = new JButton("Translate");
		JButton helpButton = new JButton("Help");

		JComboBox<Example> box = new JComboBox<>(examples);
		box.setSelectedIndex(-1);
		box.addActionListener((ActionEvent e) -> input.setText(((Example) box.getSelectedItem()).getText()));
		

		transButton.addActionListener((ActionEvent e) -> {
                    try {
                        output.setText(translate(input.getText(), depth.getText()));
                    } catch (Exception ex) {
                        ex.printStackTrace();
                        output.setText(ex.getLocalizedMessage());
                    }
                });

		helpButton.addActionListener((ActionEvent e) -> {
                    JTextArea jta = new JTextArea(help);
                    jta.setWrapStyleWord(true);
                    //jta.setEditable(false);
                    jta.setLineWrap(true);
                    JScrollPane p = new JScrollPane(jta, ScrollPaneConstants.VERTICAL_SCROLLBAR_AS_NEEDED, ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);
                    p.setPreferredSize(new Dimension(300,200));
                    
                    JOptionPane pane = new JOptionPane(p);
                    // Configure via set methods
                    JDialog dialog = pane.createDialog(null, "Help on SQL Schema to FQL");
                    dialog.setModal(false);
                    dialog.setVisible(true);
                    dialog.setResizable(true);
                });

		JPanel p = new JPanel(new BorderLayout());

		JSplitPane jsp = new JSplitPane(JSplitPane.VERTICAL_SPLIT);
		jsp.setBorder(BorderFactory.createEmptyBorder());
		jsp.setDividerSize(4);
		jsp.setResizeWeight(0.5d);
		jsp.add(input);
		jsp.add(output);

		// JPanel bp = new JPanel(new GridLayout(1, 5));
		JPanel tp = new JPanel(new GridLayout(1, 6));

		// bp.add(field);

		tp.add(transButton);
		tp.add(helpButton);
		// tp.add(jdbcButton);
		// tp.add(helpButton);
		tp.add(new JLabel("Self-loop depth", SwingConstants.RIGHT));
		tp.add(depth);
		tp.add(new JLabel("Load Example", SwingConstants.RIGHT));
		tp.add(box);

		// p.add(bp, BorderLayout.SOUTH);
		p.add(jsp, BorderLayout.CENTER);
		p.add(tp, BorderLayout.NORTH);
		JFrame f = new JFrame(kind() + " to FQL");
		f.setContentPane(p);
		f.pack();
		f.setSize(new Dimension(700, 600));
		f.setLocationRelativeTo(null);
		f.setVisible(true);
	}

	private static final String extext1 = "CREATE TABLE Place ("
			+ "\n id INT PRIMARY KEY, "
			+ "\n description VARCHAR(255)"
			+ "\n);  "
			+ "\n"
			+ "\nCREATE TABLE Person ("
			+ "\n id INT PRIMARY KEY, "
			+ "\n name VARCHAR(255), "
			+ "\n home INT,"
			+ "\n FOREIGN KEY (home) REFERENCES Place(id)"
			+ "\n);"
			+ "\n"
			+ "\nINSERT INTO Place VALUES (\"100\", \"New York\"),(\"200\", \"Chicago\");"
			+ "\nINSERT INTO Person VALUES (\"7\", \"Alice\", \"200\");";

	private static String transSQLSchema(List<EExternal> in, int depth) {
		List<Pair<List<String>, List<String>>> eqs = new LinkedList<>();
		List<Triple<String, String, String>> arrows = new LinkedList<>();
		List<Triple<String, String, String>> attrs = new LinkedList<>();
		List<String> nodes = new LinkedList<>();

		List<Pair<String, List<Pair<Object, Object>>>> inodes = new LinkedList<>();
		List<Pair<String, List<Pair<Object, Object>>>> iattrs = new LinkedList<>();
		List<Pair<String, List<Pair<Object, Object>>>> iarrows = new LinkedList<>();

		Set<String> seen = new HashSet<>();
		Map<String, List<String>> cols = new HashMap<>();
		
		Set<String> atoms = new HashSet<>();
		
		for (EExternal k0 : in) {
			if (k0 instanceof ECreateTable) {
				ECreateTable k = (ECreateTable) k0;
				if (seen.contains(k.name)) {
					throw new RuntimeException("Duplicate name: " + k.name);
				}
				seen.add(k.name);
				nodes.add(k.name);
				inodes.add(new Pair<>(k.name,
                        new LinkedList<>()));
				boolean found = false;
				List<String> lcols = new LinkedList<>();
				for (Pair<String, String> col : k.types) {
					lcols.add(col.first);
					if (col.first.equals("id")) {
						found = true;
						continue;
					}
//					if (seen.contains(col.first)) {
	//					throw new RuntimeException("Duplicate name: " + k.name);
		//			}
			//		seen.add(col.first);
					String ref = lookup(col.first, k.fks);
					if (ref == null) {
						String col_t = col.second.equals("int") ? "int"
								: "adom";
						attrs.add(new Triple<>(k.name + "_" + col.first,
								k.name, col_t));
						iattrs.add(new Pair<>(
                                k.name + "_" + col.first,
                                new LinkedList<>()));
					} else {
						if (!nodes.contains(ref)) {
							
								throw new RuntimeException(
									"Missing table " + ref + " in " + k + " (or cyclic schema with loop length > 1)");
							
						}
						arrows.add(new Triple<>(k.name + "_" + col.first,
								k.name, ref));
						iarrows.add(new Pair<>(
								k.name + "_" + col.first,
								new LinkedList<>()));
						
						if (ref.equals(k.name)) {
							List<String> lhs = deep(depth - 1, k.name + "_" +col.first);
							lhs.add(0, k.name);
							List<String> rhs = deep(depth, k.name + "_" +col.first);
							rhs.add(0, k.name);
							eqs.add(new Pair<>(lhs, rhs));
						}
					}
				}
				if (!found) {
					throw new RuntimeException("No id column in " + k);
				}
				for (Pair<String, String> fk : k.fks) {
					if (fk.first.equals("id")) {
						throw new RuntimeException(
								"Primary keys cannot be foreign keys.");
					}
					if (lookup(fk.first, k.types) == null) {
						throw new RuntimeException("Missing column " + fk.first
								+ " in " + fk);
					}
				}
				cols.put(k.name, lcols);

			}
			//  add inst_ prefix below
			if (k0 instanceof EInsertValues) {
				EInsertValues k = (EInsertValues) k0;
				List<String> lcols = cols.get(k.target);
				for (List<String> tuple : k.values) {
					if (lcols.size() != tuple.size()) {
						throw new RuntimeException("Column size mismatch "
								+ tuple + " in " + k.target);
					}
					List<Pair<Object, Object>> node = lookup2(k.target, inodes);
					if (node == null) {
						throw new RuntimeException("Missing table " + k.target);
					}
					node.add(new Pair<>("v" + tuple.get(0), "v" + tuple
							.get(0)));

					for (int colNum = 1; colNum < tuple.size(); colNum++) {
						List<Pair<Object, Object>> xxx = lookup2(k.target + "_"
								+ lcols.get(colNum), iattrs);
						if (xxx == null) {
							xxx = lookup2(k.target + "_" + lcols.get(colNum),
									iarrows);
							if (xxx == null) {
								throw new RuntimeException("Anomaly: please report");
							}
							xxx.add(new Pair<>("v" + tuple.get(0),
									"v" + maybeQuote(tuple.get(colNum))));

						} else {
							atoms.add(maybeQuote(tuple.get(colNum)));
							xxx.add(new Pair<>("v" + tuple.get(0),
									maybeQuote(tuple.get(colNum))));

						}
					}
				}
			}
		}
		
		arrows.addAll(attrs);
		XSchema exp = XRaToFpql.doSchema(nodes, arrows, eqs);

	//	SigExp.Const exp = new SigExp.Const(nodes, attrs, arrows, eqs);
		
		iarrows.addAll(iattrs);
		XInst inst = XRaToFpql.doInst(inodes, iarrows, new Var("S"));
	//	InstExp.Const inst = new InstExp.Const(inodes, iattrs, iarrows,
		//		new SigExp.Var("S"));

		String old = "S = " + exp + "\n\nI = " + inst + " : S";
		return "adom : type\n\n" + Util.sep(atoms.stream().map(x -> x + " : adom").collect(Collectors.toList()), "\n") + "\n\n" + old;
	}

	private static List<String> deep(int j, String s) {
		List<String> ret = new LinkedList<>();
		for (int i = 0; i < j; i++) {
			ret.add(s);
		}
		return ret;
	}

	private static String maybeQuote(Object o) {
		if (o instanceof String) {
			String x = (String) o;
			if (x.startsWith("\"") && x.endsWith("\"")) {
				return x;
			}
			try {
				return Integer.toString(Integer.parseInt(x)); //.toString();
			} catch (Exception ex) {
			}
			return "\"" + o + "\"";
		}
		return o.toString();
	}

	private static List<Pair<Object, Object>> lookup2(String target,
			List<Pair<String, List<Pair<Object, Object>>>> inodes) {
		for (Pair<String, List<Pair<Object, Object>>> k : inodes) {
			if (k.first.equals(target)) {
				return k.second;
			}
		}
		return null;
		// throw new RuntimeException("Not found: " + target + " in " + inodes);
	}

	private static String lookup(String s, List<Pair<String, String>> fks) {
		for (Pair<String, String> k : fks) {
			if (k.first.equals(s)) {
				return k.second;
			}
		}
		return null;
	}

	public static class EInsertValues extends EExternal {
		final String target;
		final List<List<String>> values;

		public EInsertValues(String target, List<List<String>> values) {
			this.target = target;
			this.values = values;
		}

	}

	public abstract static class EExternal {
	}

	public static class ECreateTable extends EExternal {
		final String name;
		@Override
		public String toString() {
			return "ECreateTable [name=" + name + ", types=" + types + ", fks=" + fks + "]";
		}

		final List<Pair<String, String>> types;
		final List<Pair<String, String>> fks;

		public ECreateTable(String name, List<Pair<String, String>> types,
				List<Pair<String, String>> fks) {
			this.name = name;
			this.types = types;
			this.fks = fks;
		}
	}

	static final Parser<Integer> NUMBER = IntegerLiteral.PARSER
			.map(Integer::valueOf);

	private static final String[] ops = new String[] { ",", ".", ";", ":", "{", "}", "(",
			")", "=", "->", "+", "*", "^", "|" };

	
	private static final String[] res = new String[] { "VARCHAR", "INT", "SELECT", "FROM",
			"WHERE", "DISTINCT", "UNION", "ALL", "CREATE", "TABLE", "AS",
			"PRIMARY", "KEY", "FOREIGN", "REFERENCES", "id", "AND", "OR",
			"NOT", "INSERT", "INTO", "VALUES" };

	private static final Terminals RESERVED = Terminals.caseSensitive(ops, res);

	private static final Parser<Void> IGNORED = Parsers.or(Scanners.JAVA_LINE_COMMENT,
			Scanners.JAVA_BLOCK_COMMENT, Scanners.WHITESPACES).skipMany();

	private static final Parser<?> TOKENIZER = Parsers.or(
			(Parser<?>) StringLiteral.DOUBLE_QUOTE_TOKENIZER,
			RESERVED.tokenizer(), (Parser<?>) Identifier.TOKENIZER,
			(Parser<?>) IntegerLiteral.TOKENIZER);

	private static Parser<?> term(String... names) {
		return RESERVED.token(names);
	}

	private static Parser<?> ident() {
		return Identifier.PARSER;
	}

	@SuppressWarnings({ "unchecked", "rawtypes" })
    private static List<EExternal> program(String s) {
		List<EExternal> ret = new LinkedList<>();
		List<Tuple3> decls = (List<Tuple3>) program.parse(s);

		for (Tuple3 decl : decls) {
			if (decl.a.toString().equals("CREATE")) {
				ret.add(toECreateTable(decl));
			} else if (decl.toString().startsWith("((INSERT")) {
				ret.add(toEInsertValues(decl));
			} else {
				throw new RuntimeException(decl.toString());
			}
		}
		return ret;
	}

	@SuppressWarnings("rawtypes")
	private static ECreateTable toECreateTable(Object decl) {
		Tuple4 t = (Tuple4) decl;

		String name = t.c.toString();
		Tuple3 t0 = (Tuple3) t.d;
		List t1 = (List) t0.b;

		List<Pair<String, String>> types = new LinkedList<>();
		List<Pair<String, String>> fks = new LinkedList<>();

		for (Object o : t1) {
			org.jparsec.functors.Pair p = (org.jparsec.functors.Pair) o;
			if (p.a.toString().equals("FOREIGN")) {
				Tuple5 x = (Tuple5) o;
				Tuple3 y = (Tuple3) x.b;
				fks.add(new Pair<>(y.b.toString(), x.d.toString()));
			} else {
				//if (p.a.toString().toLowerCase().equals("id")) {
				types.add(new Pair<>(p.a.toString(), p.b.toString()));
				//} else {
				//	types.add(new Pair<>(name + "_" + p.a.toString(), p.b.toString()));					
				//}
			}
		}
		return new ECreateTable(name, types, fks);
	}

	private static final Parser<?> program = program().from(TOKENIZER, IGNORED);

	@SuppressWarnings({ "rawtypes", "unchecked" })
	private static EInsertValues toEInsertValues(Object decl) {
		Tuple5 t = (Tuple5) decl;
		String target = t.b.toString();
		List<Tuple3> x = (List<Tuple3>) t.d;
		List<List<String>> values = new LinkedList<>();
		for (Tuple3 y : x) {
			List<String> l = (List<String>) y.b;
			values.add(l);
		}
		return new EInsertValues(target, values);
	}

	private static Parser<?> insertValues() {
		Parser<?> p = string().sepBy(term(","));
		return Parsers.tuple(Parsers.tuple(term("INSERT"), term("INTO")),
				ident(), term("VALUES"), Parsers.tuple(term("("), p, term(")"))
						.sepBy(term(",")), term(";"));
	}

	private static Parser<?> createTable() {
		Parser<?> q1 = Parsers.tuple(term("id"), term("INT"), term("PRIMARY"),
				term("KEY"));
		Parser<?> q2 = Parsers.tuple(ident(), term("INT"));
		Parser<?> q3 = Parsers.tuple(ident(), term("VARCHAR"),
				IntegerLiteral.PARSER.between(term("("), term(")")));
		Parser<?> q4 = Parsers.tuple(term("FOREIGN").followedBy(term("KEY")),
				Parsers.tuple(term("("), ident(), term(")")),
				term("REFERENCES"), ident(),
				term("id").between(term("("), term(")")));
		Parser<?> p = Parsers.or(q1, q2, q3, q4).sepBy(term(","));

		return Parsers.tuple(term("CREATE"), term("TABLE"), ident(),
				Parsers.tuple(term("("), p, term(")")), term(";"));
	}

	private static Parser<?> program() {
		return Parsers.or(createTable(), insertValues()).many();
	}

	private static Parser<?> string() {
		return Parsers.or(StringLiteral.PARSER,
				IntegerLiteral.PARSER, Identifier.PARSER);
	}
	
	static String globalspec = "//GlobalSpec"
			+ "\n"
			+ "\nCREATE TABLE edmcapability ("
			+ "\n  id INT PRIMARY KEY,"
			+ "\n  EDMCapabilitiesName VARCHAR(255)"
			+ "\n);"
			+ "\n"
			+ "\nCREATE TABLE servicesandconsultantscategory ("
			+ "\n  id INT PRIMARY KEY,"
			+ "\n  CateoryName VARCHAR(255),"
			+ "\n  ParentID INT,"
			+ "\n  isConcrete VARCHAR(255)"
			+ "\n);"
			+ "\n"
			+ "\nCREATE TABLE servicedetails ("
			+ "\n  id INT PRIMARY KEY,"
			+ "\n  ServiceDetailsName VARCHAR(255),"
			+ "\n  Category INT,"
			+ "\n  FOREIGN KEY (Category) REFERENCES servicesandconsultantscategory (id)"
			+ "\n);"
			+ "\n"
			+ "\nCREATE TABLE edmmachiningservicedetails ("
			+ "\n  id INT PRIMARY KEY,"
			+ "\n  ServiceDetailsID INT,"
			+ "\n  DoMicroMachining INT,"
			+ "\n  FOREIGN KEY (ServiceDetailsID) REFERENCES servicedetails (id)"
			+ "\n);"
			+ "\n"
			+ "\n//note: changed primary key from (EDMMachiningServiceDetailsID, EDMCapabilityID) to ID"
			+ "\nCREATE TABLE edmmachiningservicedetailscapabilities ("
			+ "\n  id INT PRIMARY KEY,"
			+ "\n  EDMMachiningServiceDetailsID INT,"
			+ "\n  EDMCapabilityID INT,"
			+ "\n  FOREIGN KEY (EDMCapabilityID) REFERENCES edmcapability (id),"
			+ "\n  FOREIGN KEY (EDMMachiningServiceDetailsID) REFERENCES edmmachiningservicedetails (id)"
			+ "\n);"
			+ "\n"
			+ "\n//note: changed primary key from (EDMMachiningServiceDetailsID, MaterialID) to ID"
			+ "\nCREATE TABLE  edmmachiningservicedetailsmaterials ("
			+ "\n  id INT PRIMARY KEY,"
			+ "\n  EDMMachiningServiceDetailsID INT,"
			+ "\n  MaterialID INT,"
			+ "\n  FOREIGN KEY (EDMMachiningServiceDetailsID) REFERENCES edmmachiningservicedetails (id)"
			+ "\n);"
			+ "\n"
			+ "\nCREATE TABLE partlengthvaluelist ("
			+ "\n  id INT PRIMARY KEY,"
			+ "\n  LengthValue VARCHAR(255)"
			+ "\n);"
			+ "\n"
			+ "\n//note: changed primary key from (EDMMachiningServiceDetailsID, PartLengthValueListID) to ID"
			+ "\nCREATE TABLE  edmmachiningservicedetailspartlengths ("
			+ "\n  id INT PRIMARY KEY,"
			+ "\n  EDMMachiningServiceDetailsID INT,"
			+ "\n  PartLengthValueListID INT,"
			+ "\n  FOREIGN KEY (PartLengthValueListID) REFERENCES partlengthvaluelist (id),"
			+ "\n  FOREIGN KEY (EDMMachiningServiceDetailsID) REFERENCES edmmachiningservicedetails (id)"
			+ "\n);"
			+ "\n"
			+ "\nCREATE TABLE  service ("
			+ "\n  id INT PRIMARY KEY,"
			+ "\n  ServiceName VARCHAR(255)"
			+ "\n);"
			+ "\n"
			+ "\n//note: changed primary key from (EDMMachiningServiceDetailsID, ServiceID) to ID"
			+ "\nCREATE TABLE  edmmachiningservicedetailsservices ("
			+ "\n  id INT PRIMARY KEY,"
			+ "\n  EDMMachiningServiceDetailsID INT,"
			+ "\n  ServiceID INT,"
			+ "\n  FOREIGN KEY (ServiceID) REFERENCES service (id),"
			+ "\n  FOREIGN KEY (EDMMachiningServiceDetailsID) REFERENCES edmmachiningservicedetails (id)"
			+ "\n);"
			+ "\n"
			+ "\nCREATE TABLE machiningcapability ("
			+ "\n  id INT PRIMARY KEY,"
			+ "\n  MachiningCapabilityName VARCHAR(255)"
			+ "\n);"
			+ "\n"
			+ "\n//note: changed primary key from (EDMMachiningServiceDetailsID, MachiningCapabilityID) to ID"
			+ "\nCREATE TABLE edmmachiningservicedetailsspecialtymachinings ("
			+ "\n  id INT PRIMARY KEY,"
			+ "\n  EDMMachiningServiceDetailsID INT,"
			+ "\n  MachiningCapabilityID INT,"
			+ "\n  FOREIGN KEY (MachiningCapabilityID) REFERENCES machiningcapability (id)"
			+ "\n);"
			+ "\n"
			+ "\nCREATE TABLE industry ("
			+ "\n  id INT PRIMARY KEY,"
			+ "\n  IndustryName VARCHAR(255)"
			+ "\n);"
			+ "\n"
			+ "\nCREATE TABLE machineshopservicedetails ("
			+ "\n  id INT PRIMARY KEY,"
			+ "\n  ServiceDetailsID INT,"
			+ "\n  FOREIGN KEY (ServiceDetailsID) REFERENCES servicedetails (id)"
			+ "\n);"
			+ "\n"
			+ "\n//note: changed primary key from (MachineShopServiceDetailsID, MachiningCapabilityID) to ID"
			+ "\nCREATE TABLE machineshopservicedetailscapability ("
			+ "\n  id INT PRIMARY KEY,"
			+ "\n  MachineShopServiceDetailsID INT,"
			+ "\n  MachiningCapabilityID INT,"
			+ "\n  isSpecialty INT,"
			+ "\n  FOREIGN KEY (MachiningCapabilityID) REFERENCES machiningcapability (id),"
			+ "\n  FOREIGN KEY (MachineShopServiceDetailsID) REFERENCES machineshopservicedetails (id)"
			+ "\n);"
			+ "\n"
			+ "\n//note: changed primary key from (MaterialID, ServiceCateogryID) to ID"
			+ "\nCREATE TABLE materialbyservicecategory ("
			+ "\n  id INT PRIMARY KEY,"
			+ "\n  MaterialID INT,"
			+ "\n  ServiceCateogryID INT,"
			+ "\n  FOREIGN KEY (ServiceCateogryID) REFERENCES servicesandconsultantscategory (id)"
			+ "\n);"
			+ "\n"
			+ "\n//note: added two new columns, ID is no longer a foreign key (also, before was auto-inc), foreign keys go to id now"
			+ "\nCREATE TABLE material ("
			+ "\n  id INT PRIMARY KEY,"
			+ "\n  MaterialName VARCHAR(255),"
			+ "\n  edmmachiningservicedetailsmaterials_ID INT,"
			+ "\n  materialbyservicecategory_ID INT,"
			+ "\n  FOREIGN KEY (edmmachiningservicedetailsmaterials_ID) REFERENCES edmmachiningservicedetailsmaterials (id),"
			+ "\n  FOREIGN KEY (materialbyservicecategory_ID) REFERENCES materialbyservicecategory (id)"
			+ "\n);"
			+ "\n"
			+ "\n//note: changed primary key from (MachineShopServiceDetailsID, MaterialID) to ID"
			+ "\nCREATE TABLE machineshopservicedetailsmaterials ("
			+ "\n  id INT PRIMARY KEY,"
			+ "\n  MachineShopServiceDetailsID INT,"
			+ "\n  MaterialID INT,"
			+ "\n  FOREIGN KEY (MaterialID) REFERENCES material (id),"
			+ "\n  FOREIGN KEY (MachineShopServiceDetailsID) REFERENCES machineshopservicedetails (id)"
			+ "\n);"
			+ "\n"
			+ "\n//note: changed primary key from (MachineShopServiceDetailsID, ServiceID) to ID"
			+ "\nCREATE TABLE  machineshopservicedetailsservices ("
			+ "\n  id INT PRIMARY KEY,"
			+ "\n  MachineShopServiceDetailsID INT,"
			+ "\n  ServiceID INT,"
			+ "\n  FOREIGN KEY (ServiceID) REFERENCES service (id),"
			+ "\n  FOREIGN KEY (MachineShopServiceDetailsID) REFERENCES machineshopservicedetails (id)"
			+ "\n);"
			+ "\n"
			+ "\n//note: changed primary key from MachiningCapabilityID, ServiceCategoryID) to ID"
			+ "\nCREATE TABLE  machiningcapabilitybycategory ("
			+ "\n  id INT PRIMARY KEY,"
			+ "\n  MachiningCapabilityID INT,"
			+ "\n  ServiceCategoryID INT,"
			+ "\n  isSpecialty INT,"
			+ "\n  FOREIGN KEY (MachiningCapabilityID) REFERENCES machiningcapability (id),"
			+ "\n  FOREIGN KEY (ServiceCategoryID) REFERENCES servicesandconsultantscategory (id)"
			+ "\n);"
			+ "\n"
			+ "\nCREATE TABLE  moldingmakingservicedetails ("
			+ "\n  id INT PRIMARY KEY,"
			+ "\n  ServiceDetailsID INT,"
			+ "\n  FOREIGN KEY (ServiceDetailsID) REFERENCES servicedetails (id)"
			+ "\n);"
			+ "\n"
			+ "\n//note: changed primary key from (MoldMakingServiceDetailID, IndustryID) to ID"
			+ "\nCREATE TABLE  moldmakingservicedetailsindustryserved ("
			+ "\n  id INT PRIMARY KEY,"
			+ "\n  MoldMakingServiceDetailID INT,"
			+ "\n  IndustryID INT,"
			+ "\n  FOREIGN KEY (IndustryID) REFERENCES industry (id),"
			+ "\n  FOREIGN KEY (MoldMakingServiceDetailID) REFERENCES moldingmakingservicedetails (id)"
			+ "\n);"
			+ "\n"
			+ "\nCREATE TABLE  moldorprocesstype ("
			+ "\n  id INT PRIMARY KEY,"
			+ "\n  MoldOrProcessTypeName VARCHAR(255)"
			+ "\n);"
			+ "\n"
			+ "\n//note: change primary key from (MoldMakingServiceDetailsID, MoldMakingCapabilityID) to ID"
			+ "\n//note: change MoldMakingServiceDetailsID to reference moldingmakingservicedetails.ID (vs ServiceDetailsID)"
			+ "\nCREATE TABLE  moldmakingservicedetailsmoldorprocesstype ("
			+ "\n  id INT PRIMARY KEY,"
			+ "\n  MoldMakingServiceDetailsID INT,"
			+ "\n  MoldMakingCapabilityID INT,"
			+ "\n  FOREIGN KEY (MoldMakingCapabilityID) REFERENCES moldorprocesstype (id),"
			+ "\n  FOREIGN KEY (MoldMakingServiceDetailsID) REFERENCES moldingmakingservicedetails (id)"
			+ "\n);"
			+ "\n"
			+ "\n//note: change primary key from (MoldMakingServiceDetailsID, ServiceID) to ID"
			+ "\nCREATE TABLE  moldmakingservicedetailsservices ("
			+ "\n  id INT PRIMARY KEY,"
			+ "\n  MoldMakingServiceDetailsID INT,"
			+ "\n  ServiceID INT,"
			+ "\n  FOREIGN KEY (ServiceID) REFERENCES service (id),"
			+ "\n  FOREIGN KEY (MoldMakingServiceDetailsID) REFERENCES moldingmakingservicedetails (id)"
			+ "\n);"
			+ "\n"
			+ "\n//note: change primary key from (ServiceID, ServiceCategoryID) to ID"
			+ "\nCREATE TABLE  servicebycategory ("
			+ "\n  id INT PRIMARY KEY,"
			+ "\n  ServiceID INT,"
			+ "\n  ServiceCategoryID INT,"
			+ "\n  FOREIGN KEY (ServiceID) REFERENCES service (id),"
			+ "\n  FOREIGN KEY (ServiceCategoryID) REFERENCES servicesandconsultantscategory (id)"
			+ "\n);"
			+ "\n"
			+ "\n//note: change id from varchar to int"
			+ "\nCREATE TABLE  supplier ("
			+ "\n  id INT PRIMARY KEY,"
			+ "\n  Source VARCHAR(255),"
			+ "\n  CompanyInfo VARCHAR(255)"
			+ "\n);"
			+ "\n"
			+ "\n//note: change primary key from (SupplierID, ServiceDetailsID) to ID"
			+ "\nCREATE TABLE  supplierservicedetails ("
			+ "\n  id INT PRIMARY KEY,"
			+ "\n  SupplierID VARCHAR(255),"
			+ "\n  ServiceDetailsID INT,"
			+ "\n  FOREIGN KEY (SupplierID) REFERENCES supplier (id),"
			+ "\n  FOREIGN KEY (ServiceDetailsID) REFERENCES servicedetails (id)"
			+ "\n);"
			+ "\n"
			+ "\n//////////////////////////////////////////////////////////////////////////////////////////"
			+ "\n"
			+ "\n/* Initial SQL for GlobalSpec"
			+ "\n"
			+ "\n-- MySQL Script generated by MySQL Workbench"
			+ "\n-- Wed Jun 25 14:38:23 2014"
			+ "\n-- Model: New Model    Version: 1.0"
			+ "\nSET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;"
			+ "\nSET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;"
			+ "\nSET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='TRADITIONAL,ALLOW_INVALID_DATES';"
			+ "\n"
			+ "\n-- -----------------------------------------------------"
			+ "\n-- Schema msnm"
			+ "\n-- -----------------------------------------------------"
			+ "\nCREATE SCHEMA IF NOT EXISTS `msnm` DEFAULT CHARACTER SET utf8 ;"
			+ "\nUSE `msnm` ;"
			+ "\n"
			+ "\n-- -----------------------------------------------------"
			+ "\n-- Table `msnm`.`edmcapability`"
			+ "\n-- -----------------------------------------------------"
			+ "\nCREATE TABLE IF NOT EXISTS `msnm`.`edmcapability` ("
			+ "\n  `ID` INT(11) NOT NULL AUTO_INCREMENT,"
			+ "\n  `EDMCapabilitiesName` VARCHAR(255) NULL DEFAULT NULL,"
			+ "\n  PRIMARY KEY (`ID`))"
			+ "\nENGINE = InnoDB"
			+ "\nAUTO_INCREMENT = 4"
			+ "\nDEFAULT CHARACTER SET = utf8;"
			+ "\n"
			+ "\n"
			+ "\n-- -----------------------------------------------------"
			+ "\n-- Table `msnm`.`servicesandconsultantscategory`"
			+ "\n-- -----------------------------------------------------"
			+ "\nCREATE TABLE IF NOT EXISTS `msnm`.`servicesandconsultantscategory` ("
			+ "\n  `ID` INT(11) NOT NULL AUTO_INCREMENT,"
			+ "\n  `CateoryName` VARCHAR(255) NULL DEFAULT NULL,"
			+ "\n  `ParentID` INT(11) NULL DEFAULT NULL,"
			+ "\n  `isConcrete` TINYINT(1) NULL DEFAULT '0',"
			+ "\n  PRIMARY KEY (`ID`),"
			+ "\n  INDEX `ParentID` (`ParentID` ASC))"
			+ "\nENGINE = InnoDB"
			+ "\nAUTO_INCREMENT = 7"
			+ "\nDEFAULT CHARACTER SET = utf8;"
			+ "\n"
			+ "\n"
			+ "\n-- -----------------------------------------------------"
			+ "\n-- Table `msnm`.`servicedetails`"
			+ "\n-- -----------------------------------------------------"
			+ "\nCREATE TABLE IF NOT EXISTS `msnm`.`servicedetails` ("
			+ "\n  `ID` INT(11) NOT NULL AUTO_INCREMENT,"
			+ "\n  `ServiceDetailsName` VARCHAR(255) NULL DEFAULT NULL,"
			+ "\n  `Category` INT(11) NULL DEFAULT NULL,"
			+ "\n  PRIMARY KEY (`ID`),"
			+ "\n  INDEX `fk_servicedetails_servicesandconsultantscategory1_idx` (`Category` ASC),"
			+ "\n  CONSTRAINT `fk_servicedetails_servicesandconsultantscategory1`"
			+ "\n    FOREIGN KEY (`Category`)"
			+ "\n    REFERENCES `msnm`.`servicesandconsultantscategory` (`ID`)"
			+ "\n    ON DELETE NO ACTION"
			+ "\n    ON UPDATE NO ACTION)"
			+ "\nENGINE = InnoDB"
			+ "\nAUTO_INCREMENT = 11"
			+ "\nDEFAULT CHARACTER SET = utf8;"
			+ "\n"
			+ "\n"
			+ "\n-- -----------------------------------------------------"
			+ "\n-- Table `msnm`.`edmmachiningservicedetails`"
			+ "\n-- -----------------------------------------------------"
			+ "\nCREATE TABLE IF NOT EXISTS `msnm`.`edmmachiningservicedetails` ("
			+ "\n  `ID` INT(11) NOT NULL AUTO_INCREMENT,"
			+ "\n  `ServiceDetailsID` INT(11) NULL DEFAULT NULL,"
			+ "\n  `DoMicroMachining` TINYINT(1) NULL DEFAULT '0',"
			+ "\n  PRIMARY KEY (`ID`),"
			+ "\n  INDEX `ServiceDetailsID` (`ServiceDetailsID` ASC),"
			+ "\n  CONSTRAINT `fk_edmmachiningservicedetails_servicedetails1`"
			+ "\n    FOREIGN KEY (`ServiceDetailsID`)"
			+ "\n    REFERENCES `msnm`.`servicedetails` (`ID`)"
			+ "\n    ON DELETE NO ACTION"
			+ "\n    ON UPDATE NO ACTION)"
			+ "\nENGINE = InnoDB"
			+ "\nAUTO_INCREMENT = 5"
			+ "\nDEFAULT CHARACTER SET = utf8;"
			+ "\n"
			+ "\n"
			+ "\n-- -----------------------------------------------------"
			+ "\n-- Table `msnm`.`edmmachiningservicedetailscapabilities`"
			+ "\n-- -----------------------------------------------------"
			+ "\nCREATE TABLE IF NOT EXISTS `msnm`.`edmmachiningservicedetailscapabilities` ("
			+ "\n  `ID` INT(11) NOT NULL AUTO_INCREMENT,"
			+ "\n  `EDMMachiningServiceDetailsID` INT(11) NOT NULL,"
			+ "\n  `EDMCapabilityID` INT(11) NOT NULL,"
			+ "\n  PRIMARY KEY (`EDMMachiningServiceDetailsID`, `EDMCapabilityID`),"
			+ "\n  UNIQUE INDEX `ID` (`ID` ASC),"
			+ "\n  INDEX `EDMCapabilityID` (`EDMCapabilityID` ASC),"
			+ "\n  INDEX `EDMMachiningServiceDetailsID` (`EDMMachiningServiceDetailsID` ASC),"
			+ "\n  CONSTRAINT `fk_edmmachiningservicedetailscapabilities_edmcapability1`"
			+ "\n    FOREIGN KEY (`EDMCapabilityID`)"
			+ "\n    REFERENCES `msnm`.`edmcapability` (`ID`)"
			+ "\n    ON DELETE NO ACTION"
			+ "\n    ON UPDATE NO ACTION,"
			+ "\n  CONSTRAINT `fk_edmmachiningservicedetailscapabilities_edmmachiningservice1`"
			+ "\n    FOREIGN KEY (`EDMMachiningServiceDetailsID`)"
			+ "\n    REFERENCES `msnm`.`edmmachiningservicedetails` (`ID`)"
			+ "\n    ON DELETE NO ACTION"
			+ "\n    ON UPDATE NO ACTION)"
			+ "\nENGINE = InnoDB"
			+ "\nAUTO_INCREMENT = 10"
			+ "\nDEFAULT CHARACTER SET = utf8;"
			+ "\n"
			+ "\n"
			+ "\n-- -----------------------------------------------------"
			+ "\n-- Table `msnm`.`edmmachiningservicedetailsmaterials`"
			+ "\n-- -----------------------------------------------------"
			+ "\nCREATE TABLE IF NOT EXISTS `msnm`.`edmmachiningservicedetailsmaterials` ("
			+ "\n  `ID` INT(11) NOT NULL AUTO_INCREMENT,"
			+ "\n  `EDMMachiningServiceDetailsID` INT(11) NOT NULL,"
			+ "\n  `MaterialID` INT(11) NOT NULL,"
			+ "\n  PRIMARY KEY (`EDMMachiningServiceDetailsID`, `MaterialID`),"
			+ "\n  UNIQUE INDEX `ID` (`ID` ASC),"
			+ "\n  INDEX `EDMMachiningServiceDetailsID` (`EDMMachiningServiceDetailsID` ASC),"
			+ "\n  INDEX `MaterialID` (`MaterialID` ASC),"
			+ "\n  CONSTRAINT `fk_edmmachiningservicedetailsmaterials_edmmachiningservicedet1`"
			+ "\n    FOREIGN KEY (`EDMMachiningServiceDetailsID`)"
			+ "\n    REFERENCES `msnm`.`edmmachiningservicedetails` (`ID`)"
			+ "\n    ON DELETE NO ACTION"
			+ "\n    ON UPDATE NO ACTION)"
			+ "\nENGINE = InnoDB"
			+ "\nAUTO_INCREMENT = 27"
			+ "\nDEFAULT CHARACTER SET = utf8;"
			+ "\n"
			+ "\n"
			+ "\n-- -----------------------------------------------------"
			+ "\n-- Table `msnm`.`partlengthvaluelist`"
			+ "\n-- -----------------------------------------------------"
			+ "\nCREATE TABLE IF NOT EXISTS `msnm`.`partlengthvaluelist` ("
			+ "\n  `ID` INT(11) NOT NULL AUTO_INCREMENT,"
			+ "\n  `LengthValue` VARCHAR(255) NULL DEFAULT NULL,"
			+ "\n  PRIMARY KEY (`ID`))"
			+ "\nENGINE = InnoDB"
			+ "\nAUTO_INCREMENT = 6"
			+ "\nDEFAULT CHARACTER SET = utf8;"
			+ "\n"
			+ "\n"
			+ "\n-- -----------------------------------------------------"
			+ "\n-- Table `msnm`.`edmmachiningservicedetailspartlengths`"
			+ "\n-- -----------------------------------------------------"
			+ "\nCREATE TABLE IF NOT EXISTS `msnm`.`edmmachiningservicedetailspartlengths` ("
			+ "\n  `ID` INT(11) NOT NULL AUTO_INCREMENT,"
			+ "\n  `EDMMachiningServiceDetailsID` INT(11) NOT NULL,"
			+ "\n  `PartLengthValueListID` INT(11) NOT NULL,"
			+ "\n  PRIMARY KEY (`EDMMachiningServiceDetailsID`, `PartLengthValueListID`),"
			+ "\n  UNIQUE INDEX `ID` (`ID` ASC),"
			+ "\n  INDEX `EDMMachiningServiceDetailsID` (`EDMMachiningServiceDetailsID` ASC),"
			+ "\n  INDEX `PartLengthValueListID` (`PartLengthValueListID` ASC),"
			+ "\n  CONSTRAINT `fk_edmmachiningservicedetailspartlengths_partlengthvaluelist1`"
			+ "\n    FOREIGN KEY (`PartLengthValueListID`)"
			+ "\n    REFERENCES `msnm`.`partlengthvaluelist` (`ID`)"
			+ "\n    ON DELETE NO ACTION"
			+ "\n    ON UPDATE NO ACTION,"
			+ "\n  CONSTRAINT `fk_edmmachiningservicedetailspartlengths_edmmachiningserviced1`"
			+ "\n    FOREIGN KEY (`EDMMachiningServiceDetailsID`)"
			+ "\n    REFERENCES `msnm`.`edmmachiningservicedetails` (`ID`)"
			+ "\n    ON DELETE NO ACTION"
			+ "\n    ON UPDATE NO ACTION)"
			+ "\nENGINE = InnoDB"
			+ "\nAUTO_INCREMENT = 7"
			+ "\nDEFAULT CHARACTER SET = utf8;"
			+ "\n"
			+ "\n"
			+ "\n-- -----------------------------------------------------"
			+ "\n-- Table `msnm`.`service`"
			+ "\n-- -----------------------------------------------------"
			+ "\nCREATE TABLE IF NOT EXISTS `msnm`.`service` ("
			+ "\n  `ID` INT(11) NOT NULL AUTO_INCREMENT,"
			+ "\n  `ServiceName` VARCHAR(255) NULL DEFAULT NULL,"
			+ "\n  PRIMARY KEY (`ID`))"
			+ "\nENGINE = InnoDB"
			+ "\nAUTO_INCREMENT = 26"
			+ "\nDEFAULT CHARACTER SET = utf8;"
			+ "\n"
			+ "\n"
			+ "\n-- -----------------------------------------------------"
			+ "\n-- Table `msnm`.`edmmachiningservicedetailsservices`"
			+ "\n-- -----------------------------------------------------"
			+ "\nCREATE TABLE IF NOT EXISTS `msnm`.`edmmachiningservicedetailsservices` ("
			+ "\n  `ID` INT(11) NOT NULL AUTO_INCREMENT,"
			+ "\n  `EDMMachiningServiceDetailsID` INT(11) NOT NULL,"
			+ "\n  `ServiceID` INT(11) NOT NULL,"
			+ "\n  PRIMARY KEY (`EDMMachiningServiceDetailsID`, `ServiceID`),"
			+ "\n  UNIQUE INDEX `ID` (`ID` ASC),"
			+ "\n  INDEX `EDMMachiningServiceDetailsID` (`EDMMachiningServiceDetailsID` ASC),"
			+ "\n  INDEX `fk_edmmachiningservicedetailsservices_service1_idx` (`ServiceID` ASC),"
			+ "\n  CONSTRAINT `fk_edmmachiningservicedetailsservices_service1`"
			+ "\n    FOREIGN KEY (`ServiceID`)"
			+ "\n    REFERENCES `msnm`.`service` (`ID`)"
			+ "\n    ON DELETE NO ACTION"
			+ "\n    ON UPDATE NO ACTION,"
			+ "\n  CONSTRAINT `fk_edmmachiningservicedetailsservices_edmmachiningservicedeta1`"
			+ "\n    FOREIGN KEY (`EDMMachiningServiceDetailsID`)"
			+ "\n    REFERENCES `msnm`.`edmmachiningservicedetails` (`ID`)"
			+ "\n    ON DELETE NO ACTION"
			+ "\n    ON UPDATE NO ACTION)"
			+ "\nENGINE = InnoDB"
			+ "\nAUTO_INCREMENT = 25"
			+ "\nDEFAULT CHARACTER SET = utf8;"
			+ "\n"
			+ "\n"
			+ "\n-- -----------------------------------------------------"
			+ "\n-- Table `msnm`.`machiningcapability`"
			+ "\n-- -----------------------------------------------------"
			+ "\nCREATE TABLE IF NOT EXISTS `msnm`.`machiningcapability` ("
			+ "\n  `ID` INT(11) NOT NULL AUTO_INCREMENT,"
			+ "\n  `MachiningCapabilityName` VARCHAR(255) NULL DEFAULT NULL,"
			+ "\n  PRIMARY KEY (`ID`))"
			+ "\nENGINE = InnoDB"
			+ "\nAUTO_INCREMENT = 37"
			+ "\nDEFAULT CHARACTER SET = utf8;"
			+ "\n"
			+ "\n"
			+ "\n-- -----------------------------------------------------"
			+ "\n-- Table `msnm`.`edmmachiningservicedetailsspecialtymachinings`"
			+ "\n-- -----------------------------------------------------"
			+ "\nCREATE TABLE IF NOT EXISTS `msnm`.`edmmachiningservicedetailsspecialtymachinings` ("
			+ "\n  `ID` INT(11) NOT NULL AUTO_INCREMENT,"
			+ "\n  `EDMMachiningServiceDetailsID` INT(11) NOT NULL,"
			+ "\n  `MachiningCapabilityID` INT(11) NOT NULL,"
			+ "\n  PRIMARY KEY (`EDMMachiningServiceDetailsID`, `MachiningCapabilityID`),"
			+ "\n  UNIQUE INDEX `ID` (`ID` ASC),"
			+ "\n  INDEX `EDMMachiningServiceDetailsID` (`EDMMachiningServiceDetailsID` ASC),"
			+ "\n  INDEX `MachiningCapabilityID` (`MachiningCapabilityID` ASC),"
			+ "\n  CONSTRAINT `fk_edmmachiningservicedetailsspecialtymachinings_machiningcap1`"
			+ "\n    FOREIGN KEY (`MachiningCapabilityID`)"
			+ "\n    REFERENCES `msnm`.`machiningcapability` (`ID`)"
			+ "\n    ON DELETE NO ACTION"
			+ "\n    ON UPDATE NO ACTION)"
			+ "\nENGINE = InnoDB"
			+ "\nAUTO_INCREMENT = 6"
			+ "\nDEFAULT CHARACTER SET = utf8;"
			+ "\n"
			+ "\n"
			+ "\n-- -----------------------------------------------------"
			+ "\n-- Table `msnm`.`industry`"
			+ "\n-- -----------------------------------------------------"
			+ "\nCREATE TABLE IF NOT EXISTS `msnm`.`industry` ("
			+ "\n  `ID` INT(11) NOT NULL AUTO_INCREMENT,"
			+ "\n  `IndustryName` VARCHAR(255) NULL DEFAULT NULL,"
			+ "\n  PRIMARY KEY (`ID`))"
			+ "\nENGINE = InnoDB"
			+ "\nAUTO_INCREMENT = 13"
			+ "\nDEFAULT CHARACTER SET = utf8;"
			+ "\n"
			+ "\n"
			+ "\n-- -----------------------------------------------------"
			+ "\n-- Table `msnm`.`machineshopservicedetails`"
			+ "\n-- -----------------------------------------------------"
			+ "\nCREATE TABLE IF NOT EXISTS `msnm`.`machineshopservicedetails` ("
			+ "\n  `ID` INT(11) NOT NULL AUTO_INCREMENT,"
			+ "\n  `ServiceDetailsID` INT(11) NULL DEFAULT NULL,"
			+ "\n  PRIMARY KEY (`ID`),"
			+ "\n  UNIQUE INDEX `ServiceDetailsID` (`ServiceDetailsID` ASC),"
			+ "\n  CONSTRAINT `fk_machineshopservicedetails_servicedetails1`"
			+ "\n    FOREIGN KEY (`ServiceDetailsID`)"
			+ "\n    REFERENCES `msnm`.`servicedetails` (`ID`)"
			+ "\n    ON DELETE NO ACTION"
			+ "\n    ON UPDATE NO ACTION)"
			+ "\nENGINE = InnoDB"
			+ "\nAUTO_INCREMENT = 3"
			+ "\nDEFAULT CHARACTER SET = utf8;"
			+ "\n"
			+ "\n"
			+ "\n-- -----------------------------------------------------"
			+ "\n-- Table `msnm`.`machineshopservicedetailscapability`"
			+ "\n-- -----------------------------------------------------"
			+ "\nCREATE TABLE IF NOT EXISTS `msnm`.`machineshopservicedetailscapability` ("
			+ "\n  `ID` INT(11) NOT NULL AUTO_INCREMENT,"
			+ "\n  `MachineShopServiceDetailsID` INT(11) NOT NULL,"
			+ "\n  `MachiningCapabilityID` INT(11) NOT NULL,"
			+ "\n  `isSpecialty` TINYINT(1) NULL DEFAULT '0',"
			+ "\n  PRIMARY KEY (`MachineShopServiceDetailsID`, `MachiningCapabilityID`),"
			+ "\n  UNIQUE INDEX `ID` (`ID` ASC),"
			+ "\n  INDEX `MachineShopServiceDetailsID` (`MachineShopServiceDetailsID` ASC),"
			+ "\n  INDEX `MachiningCapabilityID` (`MachiningCapabilityID` ASC),"
			+ "\n  CONSTRAINT `fk_machineshopservicedetailscapability_machiningcapability1`"
			+ "\n    FOREIGN KEY (`MachiningCapabilityID`)"
			+ "\n    REFERENCES `msnm`.`machiningcapability` (`ID`)"
			+ "\n    ON DELETE NO ACTION"
			+ "\n    ON UPDATE NO ACTION,"
			+ "\n  CONSTRAINT `fk_machineshopservicedetailscapability_machineshopservicedeta1`"
			+ "\n    FOREIGN KEY (`MachineShopServiceDetailsID`)"
			+ "\n    REFERENCES `msnm`.`machineshopservicedetails` (`ID`)"
			+ "\n    ON DELETE NO ACTION"
			+ "\n    ON UPDATE NO ACTION)"
			+ "\nENGINE = InnoDB"
			+ "\nAUTO_INCREMENT = 44"
			+ "\nDEFAULT CHARACTER SET = utf8;"
			+ "\n"
			+ "\n"
			+ "\n-- -----------------------------------------------------"
			+ "\n-- Table `msnm`.`materialbyservicecategory`"
			+ "\n-- -----------------------------------------------------"
			+ "\nCREATE TABLE IF NOT EXISTS `msnm`.`materialbyservicecategory` ("
			+ "\n  `ID` INT(11) NOT NULL AUTO_INCREMENT,"
			+ "\n  `MaterialID` INT(11) NOT NULL,"
			+ "\n  `ServiceCateogryID` INT(11) NOT NULL,"
			+ "\n  PRIMARY KEY (`MaterialID`, `ServiceCateogryID`),"
			+ "\n  UNIQUE INDEX `ID` (`ID` ASC),"
			+ "\n  INDEX `MaterialID` (`MaterialID` ASC),"
			+ "\n  INDEX `fk_materialbyservicecategory_servicesandconsultantscategory_idx` (`ServiceCateogryID` ASC),"
			+ "\n  CONSTRAINT `fk_materialbyservicecategory_servicesandconsultantscategory1`"
			+ "\n    FOREIGN KEY (`ServiceCateogryID`)"
			+ "\n    REFERENCES `msnm`.`servicesandconsultantscategory` (`ID`)"
			+ "\n    ON DELETE NO ACTION"
			+ "\n    ON UPDATE NO ACTION)"
			+ "\nENGINE = InnoDB"
			+ "\nAUTO_INCREMENT = 19"
			+ "\nDEFAULT CHARACTER SET = utf8;"
			+ "\n"
			+ "\n"
			+ "\n-- -----------------------------------------------------"
			+ "\n-- Table `msnm`.`material`"
			+ "\n-- -----------------------------------------------------"
			+ "\nCREATE TABLE IF NOT EXISTS `msnm`.`material` ("
			+ "\n  `ID` INT(11) NOT NULL AUTO_INCREMENT,"
			+ "\n  `MaterialName` VARCHAR(255) NULL DEFAULT NULL,"
			+ "\n  PRIMARY KEY (`ID`),"
			+ "\n  CONSTRAINT `fk_material_edmmachiningservicedetailsmaterials1`"
			+ "\n    FOREIGN KEY (`ID`)"
			+ "\n    REFERENCES `msnm`.`edmmachiningservicedetailsmaterials` (`MaterialID`)"
			+ "\n    ON DELETE NO ACTION"
			+ "\n    ON UPDATE NO ACTION,"
			+ "\n  CONSTRAINT `fk_material_materialbyservicecategory1`"
			+ "\n    FOREIGN KEY (`ID`)"
			+ "\n    REFERENCES `msnm`.`materialbyservicecategory` (`MaterialID`)"
			+ "\n    ON DELETE NO ACTION"
			+ "\n    ON UPDATE NO ACTION)"
			+ "\nENGINE = InnoDB"
			+ "\nAUTO_INCREMENT = 12"
			+ "\nDEFAULT CHARACTER SET = utf8;"
			+ "\n"
			+ "\n"
			+ "\n-- -----------------------------------------------------"
			+ "\n-- Table `msnm`.`machineshopservicedetailsmaterials`"
			+ "\n-- -----------------------------------------------------"
			+ "\nCREATE TABLE IF NOT EXISTS `msnm`.`machineshopservicedetailsmaterials` ("
			+ "\n  `ID` INT(11) NOT NULL AUTO_INCREMENT,"
			+ "\n  `MachineShopServiceDetailsID` INT(11) NOT NULL,"
			+ "\n  `MaterialID` INT(11) NOT NULL,"
			+ "\n  PRIMARY KEY (`MachineShopServiceDetailsID`, `MaterialID`),"
			+ "\n  UNIQUE INDEX `ID` (`ID` ASC),"
			+ "\n  INDEX `MachineShopServiceDetailsID` (`MachineShopServiceDetailsID` ASC),"
			+ "\n  INDEX `MaterialID` (`MaterialID` ASC),"
			+ "\n  CONSTRAINT `fk_machineshopservicedetailsmaterials_material1`"
			+ "\n    FOREIGN KEY (`MaterialID`)"
			+ "\n    REFERENCES `msnm`.`material` (`ID`)"
			+ "\n    ON DELETE NO ACTION"
			+ "\n    ON UPDATE NO ACTION,"
			+ "\n  CONSTRAINT `fk_machineshopservicedetailsmaterials_machineshopservicedetai1`"
			+ "\n    FOREIGN KEY (`MachineShopServiceDetailsID`)"
			+ "\n    REFERENCES `msnm`.`machineshopservicedetails` (`ID`)"
			+ "\n    ON DELETE NO ACTION"
			+ "\n    ON UPDATE NO ACTION)"
			+ "\nENGINE = InnoDB"
			+ "\nAUTO_INCREMENT = 13"
			+ "\nDEFAULT CHARACTER SET = utf8;"
			+ "\n"
			+ "\n"
			+ "\n-- -----------------------------------------------------"
			+ "\n-- Table `msnm`.`machineshopservicedetailsservices`"
			+ "\n-- -----------------------------------------------------"
			+ "\nCREATE TABLE IF NOT EXISTS `msnm`.`machineshopservicedetailsservices` ("
			+ "\n  `ID` INT(11) NOT NULL AUTO_INCREMENT,"
			+ "\n  `MachineShopServiceDetailsID` INT(11) NOT NULL,"
			+ "\n  `ServiceID` INT(11) NOT NULL,"
			+ "\n  PRIMARY KEY (`MachineShopServiceDetailsID`, `ServiceID`),"
			+ "\n  UNIQUE INDEX `ID` (`ID` ASC),"
			+ "\n  INDEX `MachineShopServiceDetailsID` (`MachineShopServiceDetailsID` ASC),"
			+ "\n  INDEX `ServiceID` (`ServiceID` ASC),"
			+ "\n  CONSTRAINT `fk_machineshopservicedetailsservices_service1`"
			+ "\n    FOREIGN KEY (`ServiceID`)"
			+ "\n    REFERENCES `msnm`.`service` (`ID`)"
			+ "\n    ON DELETE NO ACTION"
			+ "\n    ON UPDATE NO ACTION,"
			+ "\n  CONSTRAINT `fk_machineshopservicedetailsservices_machineshopservicedetails1`"
			+ "\n    FOREIGN KEY (`MachineShopServiceDetailsID`)"
			+ "\n    REFERENCES `msnm`.`machineshopservicedetails` (`ID`)"
			+ "\n    ON DELETE NO ACTION"
			+ "\n    ON UPDATE NO ACTION)"
			+ "\nENGINE = InnoDB"
			+ "\nAUTO_INCREMENT = 16"
			+ "\nDEFAULT CHARACTER SET = utf8;"
			+ "\n"
			+ "\n"
			+ "\n-- -----------------------------------------------------"
			+ "\n-- Table `msnm`.`machiningcapabilitybycategory`"
			+ "\n-- -----------------------------------------------------"
			+ "\nCREATE TABLE IF NOT EXISTS `msnm`.`machiningcapabilitybycategory` ("
			+ "\n  `ID` INT(11) NOT NULL AUTO_INCREMENT,"
			+ "\n  `MachiningCapabilityID` INT(11) NOT NULL,"
			+ "\n  `ServiceCategoryID` INT(11) NOT NULL,"
			+ "\n  `isSpecialty` TINYINT(1) NULL DEFAULT '0',"
			+ "\n  PRIMARY KEY (`MachiningCapabilityID`, `ServiceCategoryID`),"
			+ "\n  UNIQUE INDEX `ID` (`ID` ASC),"
			+ "\n  INDEX `MachiningCapabilityID` (`MachiningCapabilityID` ASC),"
			+ "\n  INDEX `fk_machiningcapabilitybycategory_servicesandconsultantscate_idx` (`ServiceCategoryID` ASC),"
			+ "\n  CONSTRAINT `fk_machiningcapabilitybycategory_machiningcapability1`"
			+ "\n    FOREIGN KEY (`MachiningCapabilityID`)"
			+ "\n    REFERENCES `msnm`.`machiningcapability` (`ID`)"
			+ "\n    ON DELETE NO ACTION"
			+ "\n    ON UPDATE NO ACTION,"
			+ "\n  CONSTRAINT `fk_machiningcapabilitybycategory_servicesandconsultantscatego1`"
			+ "\n    FOREIGN KEY (`ServiceCategoryID`)"
			+ "\n    REFERENCES `msnm`.`servicesandconsultantscategory` (`ID`)"
			+ "\n    ON DELETE NO ACTION"
			+ "\n    ON UPDATE NO ACTION)"
			+ "\nENGINE = InnoDB"
			+ "\nAUTO_INCREMENT = 37"
			+ "\nDEFAULT CHARACTER SET = utf8;"
			+ "\n"
			+ "\n"
			+ "\n-- -----------------------------------------------------"
			+ "\n-- Table `msnm`.`moldingmakingservicedetails`"
			+ "\n-- -----------------------------------------------------"
			+ "\nCREATE TABLE IF NOT EXISTS `msnm`.`moldingmakingservicedetails` ("
			+ "\n  `ID` INT(11) NOT NULL AUTO_INCREMENT,"
			+ "\n  `ServiceDetailsID` INT(11) NULL DEFAULT NULL,"
			+ "\n  PRIMARY KEY (`ID`),"
			+ "\n  UNIQUE INDEX `ServiceDetailsID` (`ServiceDetailsID` ASC),"
			+ "\n  CONSTRAINT `fk_moldingmakingservicedetails_servicedetails1`"
			+ "\n    FOREIGN KEY (`ServiceDetailsID`)"
			+ "\n    REFERENCES `msnm`.`servicedetails` (`ID`)"
			+ "\n    ON DELETE NO ACTION"
			+ "\n    ON UPDATE NO ACTION)"
			+ "\nENGINE = InnoDB"
			+ "\nAUTO_INCREMENT = 4"
			+ "\nDEFAULT CHARACTER SET = utf8;"
			+ "\n"
			+ "\n"
			+ "\n-- -----------------------------------------------------"
			+ "\n-- Table `msnm`.`moldmakingservicedetailsindustryserved`"
			+ "\n-- -----------------------------------------------------"
			+ "\nCREATE TABLE IF NOT EXISTS `msnm`.`moldmakingservicedetailsindustryserved` ("
			+ "\n  `ID` INT(11) NOT NULL AUTO_INCREMENT,"
			+ "\n  `MoldMakingServiceDetailID` INT(11) NOT NULL,"
			+ "\n  `IndustryID` INT(11) NOT NULL,"
			+ "\n  PRIMARY KEY (`MoldMakingServiceDetailID`, `IndustryID`),"
			+ "\n  UNIQUE INDEX `ID` (`ID` ASC),"
			+ "\n  INDEX `IndustryID` (`IndustryID` ASC),"
			+ "\n  INDEX `MoldMakingServiceDetailID` (`MoldMakingServiceDetailID` ASC),"
			+ "\n  CONSTRAINT `fk_moldmakingservicedetailsindustryserved_industry1`"
			+ "\n    FOREIGN KEY (`IndustryID`)"
			+ "\n    REFERENCES `msnm`.`industry` (`ID`)"
			+ "\n    ON DELETE NO ACTION"
			+ "\n    ON UPDATE NO ACTION,"
			+ "\n  CONSTRAINT `fk_moldmakingservicedetailsindustryserved_moldingmakingservic1`"
			+ "\n    FOREIGN KEY (`MoldMakingServiceDetailID`)"
			+ "\n    REFERENCES `msnm`.`moldingmakingservicedetails` (`ID`)"
			+ "\n    ON DELETE NO ACTION"
			+ "\n    ON UPDATE NO ACTION)"
			+ "\nENGINE = InnoDB"
			+ "\nAUTO_INCREMENT = 20"
			+ "\nDEFAULT CHARACTER SET = utf8;"
			+ "\n"
			+ "\n"
			+ "\n-- -----------------------------------------------------"
			+ "\n-- Table `msnm`.`moldorprocesstype`"
			+ "\n-- -----------------------------------------------------"
			+ "\nCREATE TABLE IF NOT EXISTS `msnm`.`moldorprocesstype` ("
			+ "\n  `ID` INT(11) NOT NULL AUTO_INCREMENT,"
			+ "\n  `MoldOrProcessTypeName` VARCHAR(255) NULL DEFAULT NULL,"
			+ "\n  PRIMARY KEY (`ID`))"
			+ "\nENGINE = InnoDB"
			+ "\nAUTO_INCREMENT = 13"
			+ "\nDEFAULT CHARACTER SET = utf8;"
			+ "\n"
			+ "\n"
			+ "\n-- -----------------------------------------------------"
			+ "\n-- Table `msnm`.`moldmakingservicedetailsmoldorprocesstype`"
			+ "\n-- -----------------------------------------------------"
			+ "\nCREATE TABLE IF NOT EXISTS `msnm`.`moldmakingservicedetailsmoldorprocesstype` ("
			+ "\n  `ID` INT(11) NOT NULL AUTO_INCREMENT,"
			+ "\n  `MoldMakingServiceDetailsID` INT(11) NOT NULL,"
			+ "\n  `MoldMakingCapabilityID` INT(11) NOT NULL,"
			+ "\n  PRIMARY KEY (`MoldMakingServiceDetailsID`, `MoldMakingCapabilityID`),"
			+ "\n  UNIQUE INDEX `ID` (`ID` ASC),"
			+ "\n  INDEX `MoldMakingCapabilityID` (`MoldMakingCapabilityID` ASC),"
			+ "\n  INDEX `MoldMakingServiceDetailsID` (`MoldMakingServiceDetailsID` ASC),"
			+ "\n  CONSTRAINT `fk_moldmakingservicedetailsmoldorprocesstype_moldorprocesstype1`"
			+ "\n    FOREIGN KEY (`MoldMakingCapabilityID`)"
			+ "\n    REFERENCES `msnm`.`moldorprocesstype` (`ID`)"
			+ "\n    ON DELETE NO ACTION"
			+ "\n    ON UPDATE NO ACTION,"
			+ "\n  CONSTRAINT `fk_moldmakingservicedetailsmoldorprocesstype_moldingmakingser1`"
			+ "\n    FOREIGN KEY (`MoldMakingServiceDetailsID`)"
			+ "\n    REFERENCES `msnm`.`moldingmakingservicedetails` (`ServiceDetailsID`)"
			+ "\n    ON DELETE NO ACTION"
			+ "\n    ON UPDATE NO ACTION)"
			+ "\nENGINE = InnoDB"
			+ "\nAUTO_INCREMENT = 16"
			+ "\nDEFAULT CHARACTER SET = utf8;"
			+ "\n"
			+ "\n"
			+ "\n-- -----------------------------------------------------"
			+ "\n-- Table `msnm`.`moldmakingservicedetailsservices`"
			+ "\n-- -----------------------------------------------------"
			+ "\nCREATE TABLE IF NOT EXISTS `msnm`.`moldmakingservicedetailsservices` ("
			+ "\n  `ID` INT(11) NOT NULL AUTO_INCREMENT,"
			+ "\n  `MoldMakingServiceDetailsID` INT(11) NOT NULL,"
			+ "\n  `ServiceID` INT(11) NOT NULL,"
			+ "\n  PRIMARY KEY (`MoldMakingServiceDetailsID`, `ServiceID`),"
			+ "\n  UNIQUE INDEX `ID` (`ID` ASC),"
			+ "\n  INDEX `MoldMakingServiceDetailsID` (`MoldMakingServiceDetailsID` ASC),"
			+ "\n  INDEX `ServiceID` (`ServiceID` ASC),"
			+ "\n  CONSTRAINT `fk_moldmakingservicedetailsservices_service1`"
			+ "\n    FOREIGN KEY (`ServiceID`)"
			+ "\n    REFERENCES `msnm`.`service` (`ID`)"
			+ "\n    ON DELETE NO ACTION"
			+ "\n    ON UPDATE NO ACTION,"
			+ "\n  CONSTRAINT `fk_moldmakingservicedetailsservices_moldingmakingservicedetai1`"
			+ "\n    FOREIGN KEY (`MoldMakingServiceDetailsID`)"
			+ "\n    REFERENCES `msnm`.`moldingmakingservicedetails` (`ID`)"
			+ "\n    ON DELETE NO ACTION"
			+ "\n    ON UPDATE NO ACTION)"
			+ "\nENGINE = InnoDB"
			+ "\nAUTO_INCREMENT = 18"
			+ "\nDEFAULT CHARACTER SET = utf8;"
			+ "\n"
			+ "\n"
			+ "\n-- -----------------------------------------------------"
			+ "\n-- Table `msnm`.`servicebycategory`"
			+ "\n-- -----------------------------------------------------"
			+ "\nCREATE TABLE IF NOT EXISTS `msnm`.`servicebycategory` ("
			+ "\n  `ID` INT(11) NOT NULL AUTO_INCREMENT,"
			+ "\n  `ServiceID` INT(11) NOT NULL,"
			+ "\n  `ServiceCategoryID` INT(11) NOT NULL,"
			+ "\n  PRIMARY KEY (`ServiceID`, `ServiceCategoryID`),"
			+ "\n  UNIQUE INDEX `ID` (`ID` ASC),"
			+ "\n  INDEX `ServiceCategoryID` (`ServiceCategoryID` ASC),"
			+ "\n  INDEX `ServiceID` (`ServiceID` ASC),"
			+ "\n  CONSTRAINT `fk_servicebycategory_service1`"
			+ "\n    FOREIGN KEY (`ServiceID`)"
			+ "\n    REFERENCES `msnm`.`service` (`ID`)"
			+ "\n    ON DELETE NO ACTION"
			+ "\n    ON UPDATE NO ACTION,"
			+ "\n  CONSTRAINT `fk_servicebycategory_servicesandconsultantscategory1`"
			+ "\n    FOREIGN KEY (`ServiceCategoryID`)"
			+ "\n    REFERENCES `msnm`.`servicesandconsultantscategory` (`ID`)"
			+ "\n    ON DELETE NO ACTION"
			+ "\n    ON UPDATE NO ACTION)"
			+ "\nENGINE = InnoDB"
			+ "\nAUTO_INCREMENT = 26"
			+ "\nDEFAULT CHARACTER SET = utf8;"
			+ "\n"
			+ "\n"
			+ "\n-- -----------------------------------------------------"
			+ "\n-- Table `msnm`.`supplier`"
			+ "\n-- -----------------------------------------------------"
			+ "\nCREATE TABLE IF NOT EXISTS `msnm`.`supplier` ("
			+ "\n  `ID` VARCHAR(255) NOT NULL,"
			+ "\n  `Source` VARCHAR(255) NULL DEFAULT NULL,"
			+ "\n  `CompanyInfo` VARCHAR(255) NULL DEFAULT NULL,"
			+ "\n  PRIMARY KEY (`ID`))"
			+ "\nENGINE = InnoDB"
			+ "\nDEFAULT CHARACTER SET = utf8;"
			+ "\n"
			+ "\n"
			+ "\n-- -----------------------------------------------------"
			+ "\n-- Table `msnm`.`supplierservicedetails`"
			+ "\n-- -----------------------------------------------------"
			+ "\nCREATE TABLE IF NOT EXISTS `msnm`.`supplierservicedetails` ("
			+ "\n  `ID` INT(11) NOT NULL AUTO_INCREMENT,"
			+ "\n  `SupplierID` VARCHAR(255) NOT NULL,"
			+ "\n  `ServiceDetailsID` INT(11) NOT NULL,"
			+ "\n  PRIMARY KEY (`SupplierID`, `ServiceDetailsID`),"
			+ "\n  UNIQUE INDEX `ID` (`ID` ASC),"
			+ "\n  INDEX `ServiceDetailsID` (`ServiceDetailsID` ASC),"
			+ "\n  INDEX `SupplierID` (`SupplierID` ASC),"
			+ "\n  CONSTRAINT `fk_supplierservicedetails_supplier`"
			+ "\n    FOREIGN KEY (`SupplierID`)"
			+ "\n    REFERENCES `msnm`.`supplier` (`ID`)"
			+ "\n    ON DELETE NO ACTION"
			+ "\n    ON UPDATE NO ACTION,"
			+ "\n  CONSTRAINT `fk_supplierservicedetails_servicedetails1`"
			+ "\n    FOREIGN KEY (`ServiceDetailsID`)"
			+ "\n    REFERENCES `msnm`.`servicedetails` (`ID`)"
			+ "\n    ON DELETE NO ACTION"
			+ "\n    ON UPDATE NO ACTION)"
			+ "\nENGINE = InnoDB"
			+ "\nAUTO_INCREMENT = 11"
			+ "\nDEFAULT CHARACTER SET = utf8;"
			+ "\n"
			+ "\n"
			+ "\nSET SQL_MODE=@OLD_SQL_MODE;"
			+ "\nSET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;"
			+ "\nSET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;"
			+ "\n"
			+ "\n*/"
			+ "\n";

static String thomas = "//Thomasnet"
		+ "\n"
		+ "\nCREATE TABLE unitcode ("
		+ "\n id INT PRIMARY KEY,"
		+ "\n Code VARCHAR(255), "
		+ "\n Description VARCHAR(255)"
		+ "\n);"
		+ "\n"
		+ "\nCREATE TABLE capability ("
		+ "\n id INT PRIMARY KEY,"
		+ "\n Capability_Name VARCHAR(255),"
		+ "\n Parent_ID INT,"
		+ "\n Production_Volume_Min INT,"
		+ "\n Production_Volume_Max INT,"
		+ "\n Production_Volume_Min_Unit INT,"
		+ "\n Production_Volume_Max_Unit INT,"
		+ "\n Max_Length VARCHAR(255),"
		+ "\n Max_Length_Unit INT,"
		+ "\n Tolerance VARCHAR(255),"
		+ "\n Tolerance_Unit INT,"
		+ "\n FOREIGN KEY (Production_Volume_Min_Unit) REFERENCES unitcode (id),"
		+ "\n FOREIGN KEY (Production_Volume_Max_Unit) REFERENCES unitcode (id),"
		+ "\n FOREIGN KEY (Max_Length_Unit) REFERENCES unitcode (id),"
		+ "\n FOREIGN KEY (Tolerance_Unit) REFERENCES unitcode (id)"
		+ "\n);"
		+ "\n"
		+ "\nCREATE TABLE productorservicecategory ("
		+ "\n id INT PRIMARY KEY,"
		+ "\n Category_Name VARCHAR(255),"
		+ "\n Parent_ID INT,"
		+ "\n isConcrete INT"
		+ "\n);"
		+ "\n"
		+ "\n//note: replace primary key (Capability_ID, ProductOrServiceCategory_ID) with id"
		+ "\nCREATE TABLE capabilitycategories ("
		+ "\n id INT PRIMARY KEY,"
		+ "\n Capability_ID INT,"
		+ "\n ProductOrServiceCategory_ID INT,"
		+ "\n FOREIGN KEY (Capability_ID) REFERENCES capability (id),"
		+ "\n FOREIGN KEY (ProductOrServiceCategory_ID) REFERENCES productorservicecategory (id)"
		+ "\n);"
		+ "\n"
		+ "\nCREATE TABLE equipmenttype ("
		+ "\n id INT PRIMARY KEY,"
		+ "\n EquipmentType_Name VARCHAR(255)"
		+ "\n);"
		+ "\n"
		+ "\n//note: replace primary key (Capability_ID, EquipmentType_ID) with id"
		+ "\nCREATE TABLE capabilityequipment ("
		+ "\n id INT PRIMARY KEY,"
		+ "\n Capability_ID INT,"
		+ "\n EquipmentType_ID INT,"
		+ "\n FOREIGN KEY (Capability_ID) REFERENCES capability (id),"
		+ "\n FOREIGN KEY (EquipmentType_ID) REFERENCES equipmenttype (id)"
		+ "\n);"
		+ "\n"
		+ "\nCREATE TABLE industry ("
		+ "\n id INT PRIMARY KEY,"
		+ "\n Industry_Name VARCHAR(255)"
		+ "\n);"
		+ "\n"
		+ "\n//note: replace primary key (Capability_ID, Industry_ID) with id"
		+ "\nCREATE TABLE capabilityindustry ("
		+ "\n id INT PRIMARY KEY,"
		+ "\n Capability_ID INT,"
		+ "\n Industry_ID INT,"
		+ "\n FOREIGN KEY (Capability_ID) REFERENCES capability (id),"
		+ "\n FOREIGN KEY (Industry_ID) REFERENCES industry (id)"
		+ "\n);"
		+ "\n"
		+ "\nCREATE TABLE material ("
		+ "\n id INT PRIMARY KEY,"
		+ "\n Material_Name VARCHAR(255)"
		+ "\n);"
		+ "\n"
		+ "\n//note: replace primary key (Capability_ID, Material_ID) with id"
		+ "\nCREATE TABLE capabilitymaterials ("
		+ "\n id INT PRIMARY KEY,"
		+ "\n Capability_ID INT,"
		+ "\n Material_ID INT,"
		+ "\n FOREIGN KEY (Capability_ID) REFERENCES capability (id),"
		+ "\n FOREIGN KEY (Material_ID) REFERENCES material (id)"
		+ "\n);"
		+ "\n"
		+ "\nCREATE TABLE process ("
		+ "\n id INT PRIMARY KEY,"
		+ "\n Process_Name VARCHAR(255) "
		+ "\n);"
		+ "\n"
		+ "\n//note: replace primary key (Capability_ID, Process_ID) with id"
		+ "\nCREATE TABLE capabilityprocesses ("
		+ "\n id INT PRIMARY KEY,"
		+ "\n Capability_ID INT,"
		+ "\n Process_ID INT,"
		+ "\n FOREIGN KEY (Process_ID) REFERENCES process (id)"
		+ "\n);"
		+ "\n"
		+ "\nCREATE TABLE moldtypes ("
		+ "\n id INT PRIMARY KEY,"
		+ "\n MoldTypes_Name VARCHAR(255) "
		+ "\n);"
		+ "\n"
		+ "\n//note: replace primary key (Capability_ID, MoldTypes_ID) with id"
		+ "\nCREATE TABLE capabilitytypesofmolds ("
		+ "\n id INT PRIMARY KEY,"
		+ "\n Capability_ID INT,"
		+ "\n MoldTypes_ID INT,"
		+ "\n FOREIGN KEY (Capability_ID) REFERENCES capability (id),"
		+ "\n FOREIGN KEY (MoldTypes_ID) REFERENCES moldtypes (id)"
		+ "\n);"
		+ "\n"
		+ "\n//note: replace id VARCHAR with id INT"
		+ "\nCREATE TABLE supplier ("
		+ "\n id INT PRIMARY KEY, "
		+ "\n Source VARCHAR(255),"
		+ "\n Note VARCHAR(255)"
		+ "\n);"
		+ "\n"
		+ "\n//note: replace primary key (Supplier_ID, Capability_ID) with id"
		+ "\nCREATE TABLE suppliercapabilities ("
		+ "\n id INT PRIMARY KEY,"
		+ "\n Supplier_ID VARCHAR(255),"
		+ "\n Capability_ID INT,"
		+ "\n FOREIGN KEY (Capability_ID) REFERENCES capability (id),"
		+ "\n FOREIGN KEY (Supplier_ID) REFERENCES supplier (id)"
		+ "\n);"
		+ "\n"
		+ "\n//////////////////////////////////////////////////////////////////////////////////////////"
		+ "\n//Original SQL for Thomasnet"
		+ "\n"
		+ "\n/*"
		+ "\n-- MySQL Script generated by MySQL Workbench"
		+ "\n-- 06/25/14 17:13:50"
		+ "\n-- Model: New Model    Version: 1.0"
		+ "\nSET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;"
		+ "\nSET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;"
		+ "\nSET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='TRADITIONAL,ALLOW_INVALID_DATES';"
		+ "\n"
		+ "\n-- -----------------------------------------------------"
		+ "\n-- Schema thomasnet"
		+ "\n-- -----------------------------------------------------"
		+ "\n"
		+ "\n-- -----------------------------------------------------"
		+ "\n-- Table `unitcode`"
		+ "\n-- -----------------------------------------------------"
		+ "\nCREATE TABLE IF NOT EXISTS `unitcode` ("
		+ "\n `ID` INT(11) NOT NULL AUTO_INCREMENT,"
		+ "\n `Code` VARCHAR(255) NULL DEFAULT NULL,"
		+ "\n `Description` VARCHAR(255) NULL DEFAULT NULL,"
		+ "\n PRIMARY KEY (`ID`))"
		+ "\nENGINE = InnoDB"
		+ "\nAUTO_INCREMENT = 5"
		+ "\nDEFAULT CHARACTER SET = utf8;"
		+ "\n"
		+ "\nCREATE INDEX `Code` ON `unitcode` (`Code` ASC);"
		+ "\n"
		+ "\n"
		+ "\n-- -----------------------------------------------------"
		+ "\n-- Table `capability`"
		+ "\n-- -----------------------------------------------------"
		+ "\nCREATE TABLE IF NOT EXISTS `capability` ("
		+ "\n `ID` INT(11) NOT NULL AUTO_INCREMENT,"
		+ "\n `Capability_Name` VARCHAR(255) NULL DEFAULT NULL,"
		+ "\n `Parent_ID` INT(11) NULL DEFAULT NULL,"
		+ "\n `Production_Volume_Min` INT(11) NULL DEFAULT NULL,"
		+ "\n `Production_Volume_Max` INT(11) NULL DEFAULT NULL,"
		+ "\n `Production_Volume_Min_Unit` INT(11) NULL DEFAULT NULL,"
		+ "\n `Production_Volume_Max_Unit` INT(11) NULL DEFAULT NULL,"
		+ "\n `Max_Length` DOUBLE NULL DEFAULT NULL,"
		+ "\n `Max_Length_Unit` INT(11) NULL DEFAULT NULL,"
		+ "\n `Tolerance` DOUBLE NULL DEFAULT NULL,"
		+ "\n `Tolerance_Unit` INT(11) NULL DEFAULT NULL,"
		+ "\n PRIMARY KEY (`ID`),"
		+ "\n CONSTRAINT `fk_capability_unitcode1`"
		+ "\n   FOREIGN KEY (`Production_Volume_Min_Unit`)"
		+ "\n   REFERENCES `unitcode` (`ID`)"
		+ "\n   ON DELETE NO ACTION"
		+ "\n   ON UPDATE NO ACTION,"
		+ "\n CONSTRAINT `fk_capability_unitcode2`"
		+ "\n   FOREIGN KEY (`Production_Volume_Max_Unit`)"
		+ "\n   REFERENCES `unitcode` (`ID`)"
		+ "\n   ON DELETE NO ACTION"
		+ "\n   ON UPDATE NO ACTION,"
		+ "\n CONSTRAINT `fk_capability_unitcode3`"
		+ "\n   FOREIGN KEY (`Max_Length_Unit`)"
		+ "\n   REFERENCES `unitcode` (`ID`)"
		+ "\n   ON DELETE NO ACTION"
		+ "\n   ON UPDATE NO ACTION,"
		+ "\n CONSTRAINT `fk_capability_unitcode4`"
		+ "\n   FOREIGN KEY (`Tolerance_Unit`)"
		+ "\n   REFERENCES `unitcode` (`ID`)"
		+ "\n   ON DELETE NO ACTION"
		+ "\n   ON UPDATE NO ACTION)"
		+ "\nENGINE = InnoDB"
		+ "\nAUTO_INCREMENT = 12"
		+ "\nDEFAULT CHARACTER SET = utf8;"
		+ "\n"
		+ "\nCREATE INDEX `Parent_ID` ON `capability` (`Parent_ID` ASC);"
		+ "\n"
		+ "\nCREATE INDEX `fk_capability_unitcode1` ON `capability`"
		+ "\n(`Production_Volume_Min_Unit` ASC);"
		+ "\n"
		+ "\nCREATE INDEX `fk_capability_unitcode2` ON `capability`"
		+ "\n(`Production_Volume_Max_Unit` ASC);"
		+ "\n"
		+ "\nCREATE INDEX `fk_capability_unitcode3` ON `capability` (`Max_Length_Unit` ASC);"
		+ "\n"
		+ "\nCREATE INDEX `fk_capability_unitcode4` ON `capability` (`Tolerance_Unit` ASC);"
		+ "\n"
		+ "\n"
		+ "\n-- -----------------------------------------------------"
		+ "\n-- Table `productorservicecategory`"
		+ "\n-- -----------------------------------------------------"
		+ "\nCREATE TABLE IF NOT EXISTS `productorservicecategory` ("
		+ "\n `ID` INT(11) NOT NULL AUTO_INCREMENT,"
		+ "\n `Category_Name` VARCHAR(255) NULL DEFAULT NULL,"
		+ "\n `Parent_ID` INT(11) NULL DEFAULT NULL,"
		+ "\n `isConcrete` TINYINT(1) NULL DEFAULT '0',"
		+ "\n PRIMARY KEY (`ID`))"
		+ "\nENGINE = InnoDB"
		+ "\nAUTO_INCREMENT = 16"
		+ "\nDEFAULT CHARACTER SET = utf8;"
		+ "\n"
		+ "\n"
		+ "\n-- -----------------------------------------------------"
		+ "\n-- Table `capabilitycategories`"
		+ "\n-- -----------------------------------------------------"
		+ "\nCREATE TABLE IF NOT EXISTS `capabilitycategories` ("
		+ "\n `ID` INT(11) NOT NULL AUTO_INCREMENT,"
		+ "\n `Capability_ID` INT(11) NOT NULL,"
		+ "\n `ProductOrServiceCategory_ID` INT(11) NOT NULL,"
		+ "\n PRIMARY KEY (`Capability_ID`, `ProductOrServiceCategory_ID`),"
		+ "\n CONSTRAINT `fk_capabilitycategories_capability1`"
		+ "\n   FOREIGN KEY (`Capability_ID`)"
		+ "\n   REFERENCES `capability` (`ID`)"
		+ "\n   ON DELETE NO ACTION"
		+ "\n   ON UPDATE NO ACTION,"
		+ "\n CONSTRAINT `fk_capabilitycategories_productorservicecategory1`"
		+ "\n   FOREIGN KEY (`ProductOrServiceCategory_ID`)"
		+ "\n   REFERENCES `productorservicecategory` (`ID`)"
		+ "\n   ON DELETE NO ACTION"
		+ "\n   ON UPDATE NO ACTION)"
		+ "\nENGINE = InnoDB"
		+ "\nAUTO_INCREMENT = 20"
		+ "\nDEFAULT CHARACTER SET = utf8;"
		+ "\n"
		+ "\nCREATE UNIQUE INDEX `ID` ON `capabilitycategories` (`ID` ASC);"
		+ "\n"
		+ "\nCREATE INDEX `Capability_ID` ON `capabilitycategories` (`Capability_ID` ASC);"
		+ "\n"
		+ "\nCREATE INDEX `ProductOrServiceCategory_ID` ON `capabilitycategories`"
		+ "\n(`ProductOrServiceCategory_ID` ASC);"
		+ "\n"
		+ "\n"
		+ "\n-- -----------------------------------------------------"
		+ "\n-- Table `equipmenttype`"
		+ "\n-- -----------------------------------------------------"
		+ "\nCREATE TABLE IF NOT EXISTS `equipmenttype` ("
		+ "\n `ID` INT(11) NOT NULL AUTO_INCREMENT,"
		+ "\n `EquipmentType_Name` VARCHAR(255) NULL DEFAULT NULL,"
		+ "\n PRIMARY KEY (`ID`))"
		+ "\nENGINE = InnoDB"
		+ "\nAUTO_INCREMENT = 11"
		+ "\nDEFAULT CHARACTER SET = utf8;"
		+ "\n"
		+ "\nCREATE UNIQUE INDEX `EquipmentType_Name` ON `equipmenttype`"
		+ "\n(`EquipmentType_Name` ASC);"
		+ "\n"
		+ "\n"
		+ "\n-- -----------------------------------------------------"
		+ "\n-- Table `capabilityequipment`"
		+ "\n-- -----------------------------------------------------"
		+ "\nCREATE TABLE IF NOT EXISTS `capabilityequipment` ("
		+ "\n `ID` INT(11) NOT NULL AUTO_INCREMENT,"
		+ "\n `Capability_ID` INT(11) NOT NULL,"
		+ "\n `EquipmentType_ID` INT(11) NOT NULL,"
		+ "\n PRIMARY KEY (`Capability_ID`, `EquipmentType_ID`),"
		+ "\n CONSTRAINT `fk_capabilityequipment_capability1`"
		+ "\n   FOREIGN KEY (`Capability_ID`)"
		+ "\n   REFERENCES `capability` (`ID`)"
		+ "\n   ON DELETE NO ACTION"
		+ "\n   ON UPDATE NO ACTION,"
		+ "\n CONSTRAINT `fk_capabilityequipment_equipmenttype1`"
		+ "\n   FOREIGN KEY (`EquipmentType_ID`)"
		+ "\n   REFERENCES `equipmenttype` (`ID`)"
		+ "\n   ON DELETE NO ACTION"
		+ "\n   ON UPDATE NO ACTION)"
		+ "\nENGINE = InnoDB"
		+ "\nAUTO_INCREMENT = 18"
		+ "\nDEFAULT CHARACTER SET = utf8;"
		+ "\n"
		+ "\nCREATE UNIQUE INDEX `ID` ON `capabilityequipment` (`ID` ASC);"
		+ "\n"
		+ "\nCREATE INDEX `Capability_ID` ON `capabilityequipment` (`Capability_ID` ASC);"
		+ "\n"
		+ "\nCREATE INDEX `EquipmentType_ID` ON `capabilityequipment`"
		+ "\n(`EquipmentType_ID` ASC);"
		+ "\n"
		+ "\n"
		+ "\n-- -----------------------------------------------------"
		+ "\n-- Table `industry`"
		+ "\n-- -----------------------------------------------------"
		+ "\nCREATE TABLE IF NOT EXISTS `industry` ("
		+ "\n `ID` INT(11) NOT NULL AUTO_INCREMENT,"
		+ "\n `Industry_Name` VARCHAR(255) NULL DEFAULT NULL,"
		+ "\n PRIMARY KEY (`ID`))"
		+ "\nENGINE = InnoDB"
		+ "\nAUTO_INCREMENT = 18"
		+ "\nDEFAULT CHARACTER SET = utf8;"
		+ "\n"
		+ "\nCREATE UNIQUE INDEX `Industry_Name` ON `industry` (`Industry_Name` ASC);"
		+ "\n"
		+ "\n"
		+ "\n-- -----------------------------------------------------"
		+ "\n-- Table `capabilityindustry`"
		+ "\n-- -----------------------------------------------------"
		+ "\nCREATE TABLE IF NOT EXISTS `capabilityindustry` ("
		+ "\n `ID` INT(11) NOT NULL AUTO_INCREMENT,"
		+ "\n `Capability_ID` INT(11) NOT NULL,"
		+ "\n `Industry_ID` INT(11) NOT NULL,"
		+ "\n PRIMARY KEY (`Capability_ID`, `Industry_ID`),"
		+ "\n CONSTRAINT `fk_capabilityindustry_capability1`"
		+ "\n   FOREIGN KEY (`Capability_ID`)"
		+ "\n   REFERENCES `capability` (`ID`)"
		+ "\n   ON DELETE NO ACTION"
		+ "\n   ON UPDATE NO ACTION,"
		+ "\n CONSTRAINT `fk_capabilityindustry_industry1`"
		+ "\n   FOREIGN KEY (`Industry_ID`)"
		+ "\n   REFERENCES `industry` (`ID`)"
		+ "\n   ON DELETE NO ACTION"
		+ "\n   ON UPDATE NO ACTION)"
		+ "\nENGINE = InnoDB"
		+ "\nAUTO_INCREMENT = 25"
		+ "\nDEFAULT CHARACTER SET = utf8;"
		+ "\n"
		+ "\nCREATE UNIQUE INDEX `ID` ON `capabilityindustry` (`ID` ASC);"
		+ "\n"
		+ "\nCREATE INDEX `Capability_ID` ON `capabilityindustry` (`Capability_ID` ASC);"
		+ "\n"
		+ "\nCREATE INDEX `Industry_ID` ON `capabilityindustry` (`Industry_ID` ASC);"
		+ "\n"
		+ "\n"
		+ "\n-- -----------------------------------------------------"
		+ "\n-- Table `material`"
		+ "\n-- -----------------------------------------------------"
		+ "\nCREATE TABLE IF NOT EXISTS `material` ("
		+ "\n `ID` INT(11) NOT NULL AUTO_INCREMENT,"
		+ "\n `Material_Name` VARCHAR(255) NULL DEFAULT NULL,"
		+ "\n PRIMARY KEY (`ID`))"
		+ "\nENGINE = InnoDB"
		+ "\nAUTO_INCREMENT = 42"
		+ "\nDEFAULT CHARACTER SET = utf8;"
		+ "\n"
		+ "\n"
		+ "\n-- -----------------------------------------------------"
		+ "\n-- Table `capabilitymaterials`"
		+ "\n-- -----------------------------------------------------"
		+ "\nCREATE TABLE IF NOT EXISTS `capabilitymaterials` ("
		+ "\n `ID` INT(11) NOT NULL AUTO_INCREMENT,"
		+ "\n `Capability_ID` INT(11) NOT NULL,"
		+ "\n `Material_ID` INT(11) NOT NULL,"
		+ "\n PRIMARY KEY (`Capability_ID`, `Material_ID`),"
		+ "\n CONSTRAINT `fk_capabilitymaterials_capability1`"
		+ "\n   FOREIGN KEY (`Capability_ID`)"
		+ "\n   REFERENCES `capability` (`ID`)"
		+ "\n   ON DELETE NO ACTION"
		+ "\n   ON UPDATE NO ACTION,"
		+ "\n CONSTRAINT `fk_capabilitymaterials_material1`"
		+ "\n   FOREIGN KEY (`Material_ID`)"
		+ "\n   REFERENCES `material` (`ID`)"
		+ "\n   ON DELETE NO ACTION"
		+ "\n   ON UPDATE NO ACTION)"
		+ "\nENGINE = InnoDB"
		+ "\nAUTO_INCREMENT = 89"
		+ "\nDEFAULT CHARACTER SET = utf8;"
		+ "\n"
		+ "\nCREATE INDEX `Capability_ID` ON `capabilitymaterials` (`Capability_ID` ASC);"
		+ "\n"
		+ "\nCREATE INDEX `Material_ID` ON `capabilitymaterials` (`Material_ID` ASC);"
		+ "\n"
		+ "\nCREATE INDEX `ID` ON `capabilitymaterials` (`ID` ASC);"
		+ "\n"
		+ "\n"
		+ "\n-- -----------------------------------------------------"
		+ "\n-- Table `process`"
		+ "\n-- -----------------------------------------------------"
		+ "\nCREATE TABLE IF NOT EXISTS `process` ("
		+ "\n `ID` INT(11) NOT NULL AUTO_INCREMENT,"
		+ "\n `Process_Name` VARCHAR(255) NULL DEFAULT NULL,"
		+ "\n PRIMARY KEY (`ID`))"
		+ "\nENGINE = InnoDB"
		+ "\nAUTO_INCREMENT = 10"
		+ "\nDEFAULT CHARACTER SET = utf8;"
		+ "\n"
		+ "\n"
		+ "\n-- -----------------------------------------------------"
		+ "\n-- Table `capabilityprocesses`"
		+ "\n-- -----------------------------------------------------"
		+ "\nCREATE TABLE IF NOT EXISTS `capabilityprocesses` ("
		+ "\n `ID` INT(11) NOT NULL AUTO_INCREMENT,"
		+ "\n `Capability_ID` INT(11) NOT NULL,"
		+ "\n `Process_ID` INT(11) NOT NULL,"
		+ "\n PRIMARY KEY (`Capability_ID`, `Process_ID`),"
		+ "\n CONSTRAINT `fk_capabilityprocesses_process1`"
		+ "\n   FOREIGN KEY (`Process_ID`)"
		+ "\n   REFERENCES `process` (`ID`)"
		+ "\n   ON DELETE NO ACTION"
		+ "\n   ON UPDATE NO ACTION)"
		+ "\nENGINE = InnoDB"
		+ "\nAUTO_INCREMENT = 21"
		+ "\nDEFAULT CHARACTER SET = utf8;"
		+ "\n"
		+ "\nCREATE UNIQUE INDEX `ID` ON `capabilityprocesses` (`ID` ASC);"
		+ "\n"
		+ "\nCREATE INDEX `Capability_ID` ON `capabilityprocesses` (`Capability_ID` ASC);"
		+ "\n"
		+ "\nCREATE INDEX `Process_ID` ON `capabilityprocesses` (`Process_ID` ASC);"
		+ "\n"
		+ "\n"
		+ "\n-- -----------------------------------------------------"
		+ "\n-- Table `moldtypes`"
		+ "\n-- -----------------------------------------------------"
		+ "\nCREATE TABLE IF NOT EXISTS `moldtypes` ("
		+ "\n `ID` INT(11) NOT NULL AUTO_INCREMENT,"
		+ "\n `MoldTypes_Name` VARCHAR(255) NULL DEFAULT NULL,"
		+ "\n PRIMARY KEY (`ID`))"
		+ "\nENGINE = InnoDB"
		+ "\nAUTO_INCREMENT = 10"
		+ "\nDEFAULT CHARACTER SET = utf8;"
		+ "\n"
		+ "\nCREATE UNIQUE INDEX `MoldTypes_Name` ON `moldtypes` (`MoldTypes_Name` ASC);"
		+ "\n"
		+ "\n"
		+ "\n-- -----------------------------------------------------"
		+ "\n-- Table `capabilitytypesofmolds`"
		+ "\n-- -----------------------------------------------------"
		+ "\nCREATE TABLE IF NOT EXISTS `capabilitytypesofmolds` ("
		+ "\n `ID` INT(11) NOT NULL AUTO_INCREMENT,"
		+ "\n `Capability_ID` INT(11) NOT NULL,"
		+ "\n `MoldTypes_ID` INT(11) NOT NULL,"
		+ "\n PRIMARY KEY (`Capability_ID`, `MoldTypes_ID`),"
		+ "\n CONSTRAINT `fk_capabilitytypesofmolds_capability1`"
		+ "\n   FOREIGN KEY (`Capability_ID`)"
		+ "\n   REFERENCES `capability` (`ID`)"
		+ "\n   ON DELETE NO ACTION"
		+ "\n   ON UPDATE NO ACTION,"
		+ "\n CONSTRAINT `fk_capabilitytypesofmolds_moldtypes1`"
		+ "\n   FOREIGN KEY (`MoldTypes_ID`)"
		+ "\n   REFERENCES `moldtypes` (`ID`)"
		+ "\n   ON DELETE NO ACTION"
		+ "\n   ON UPDATE NO ACTION)"
		+ "\nENGINE = InnoDB"
		+ "\nAUTO_INCREMENT = 12"
		+ "\nDEFAULT CHARACTER SET = utf8;"
		+ "\n"
		+ "\nCREATE UNIQUE INDEX `ID` ON `capabilitytypesofmolds` (`ID` ASC);"
		+ "\n"
		+ "\nCREATE INDEX `Capability_ID` ON `capabilitytypesofmolds` (`Capability_ID` ASC);"
		+ "\n"
		+ "\nCREATE INDEX `MoldTypes_ID` ON `capabilitytypesofmolds` (`MoldTypes_ID` ASC);"
		+ "\n"
		+ "\n"
		+ "\n-- -----------------------------------------------------"
		+ "\n-- Table `supplier`"
		+ "\n-- -----------------------------------------------------"
		+ "\nCREATE TABLE IF NOT EXISTS `supplier` ("
		+ "\n `ID` VARCHAR(255) NOT NULL,"
		+ "\n `Source` VARCHAR(255) NULL DEFAULT NULL,"
		+ "\n `Note` VARCHAR(255) NULL DEFAULT NULL,"
		+ "\n PRIMARY KEY (`ID`))"
		+ "\nENGINE = InnoDB"
		+ "\nDEFAULT CHARACTER SET = utf8;"
		+ "\n"
		+ "\n"
		+ "\n-- -----------------------------------------------------"
		+ "\n-- Table `suppliercapabilities`"
		+ "\n-- -----------------------------------------------------"
		+ "\nCREATE TABLE IF NOT EXISTS `suppliercapabilities` ("
		+ "\n `ID` INT(11) NOT NULL AUTO_INCREMENT,"
		+ "\n `Supplier_ID` VARCHAR(255) NOT NULL,"
		+ "\n `Capability_ID` INT(11) NOT NULL,"
		+ "\n PRIMARY KEY (`Supplier_ID`, `Capability_ID`),"
		+ "\n CONSTRAINT `fk_suppliercapabilities_capability`"
		+ "\n   FOREIGN KEY (`Capability_ID`)"
		+ "\n   REFERENCES `capability` (`ID`)"
		+ "\n   ON DELETE NO ACTION"
		+ "\n   ON UPDATE NO ACTION,"
		+ "\n CONSTRAINT `fk_suppliercapabilities_supplier1`"
		+ "\n   FOREIGN KEY (`Supplier_ID`)"
		+ "\n   REFERENCES `supplier` (`ID`)"
		+ "\n   ON DELETE NO ACTION"
		+ "\n   ON UPDATE NO ACTION)"
		+ "\nENGINE = InnoDB"
		+ "\nAUTO_INCREMENT = 12"
		+ "\nDEFAULT CHARACTER SET = utf8;"
		+ "\n"
		+ "\nCREATE UNIQUE INDEX `ID` ON `suppliercapabilities` (`ID` ASC);"
		+ "\n"
		+ "\nCREATE INDEX `Capability_ID` ON `suppliercapabilities` (`Capability_ID` ASC);"
		+ "\n"
		+ "\nCREATE INDEX `Supplier_ID` ON `suppliercapabilities` (`Supplier_ID` ASC);"
		+ "\n"
		+ "\n"
		+ "\nSET SQL_MODE=@OLD_SQL_MODE;"
		+ "\nSET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;"
		+ "\nSET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;"
		+ "\n"
		+ "\n*/"
		+ "\n";

private static final String b_str = "CREATE TABLE material ("
+ "\n  id INT PRIMARY KEY,"
+ "\n  MaterialName VARCHAR(255)  "
+ "\n);"
+ "\nINSERT INTO material VALUES "
+ "\n(1,\"Aluminum\"),"
+ "\n(2,\"Brass\"),"
+ "\n(4,\"Stainless Steel\"),"
+ "\n(5,\"Steel / Steel Alloys\"),"
+ "\n(6,\"Titanium\"),"
+ "\n(7,\"Hardened Metals\"),"
+ "\n(8,\"Ultra-hard Materials\"),"
+ "\n(9,\"Glass\"),"
+ "\n(10,\"Glass Ceramics\"),"
+ "\n(11,\"Ceramics\");"
+ "\n"
+ "\nCREATE TABLE industry ("
+ "\n  id INT PRIMARY KEY,"
+ "\n  IndustryName VARCHAR(255)"
+ "\n);"
+ "\nINSERT INTO industry VALUES "
+ "\n(1,\"Aerospace\"),"
+ "\n(2,\"Automotive\"),"
+ "\n(3,\"Electrical/Electronics\"),"
+ "\n(4,\"Food Processing\"),"
+ "\n(5,\"Industrial\"),"
+ "\n(6,\"Marine\"),"
+ "\n(7,\"Medical\"),"
+ "\n(8,\"Military\"),"
+ "\n(9,\"Optical\"),"
+ "\n(10,\"Pharmaceutical\"),"
+ "\n(11,\"Semiconduction\"),"
+ "\n(12,\"Other\");"
+ "\n"
+ "\nCREATE TABLE machiningcapability ("
+ "\n  id INT PRIMARY KEY,"
+ "\n  MachiningCapabilityName VARCHAR(255)"
+ "\n);"
+ "\nINSERT INTO machiningcapability VALUES "
+ "\n(1,\"Drilling\"),"
+ "\n(2,\"Screw Machining\"),"
+ "\n(3,\"Water/Abrasive Jet Machining\"),"
+ "\n(4,\"Deep Hole Drilling\"),"
+ "\n(5,\"Double-disc Grinding\"),"
+ "\n(6,\"Jig Grinding\"),"
+ "\n(7,\"Laser Machining\"),"
+ "\n(8,\"Etching/Chemical Milling\"),"
+ "\n(9,\"Milling\"),"
+ "\n(10,\"Swiss Machining\"),"
+ "\n(11,\"Jig Boring\"),"
+ "\n(12,\"Centerless Grinding\"),"
+ "\n(13,\"id/Internal Grinding\"),"
+ "\n(14,\"Surface Grinding\"),"
+ "\n(15,\"Electrode EDM\"),"
+ "\n(16,\"Electrochemical/Photochemical Machining\"),"
+ "\n(17,\"Turning\"),"
+ "\n(18,\"Abrasive Flow Machining\"),"
+ "\n(19,\"Broaching\"),"
+ "\n(20,\"Creep Feed Grinding\"),"
+ "\n(21,\"OD/External Grinding\"),"
+ "\n(22,\"Honing\"),"
+ "\n(24,\"Wire EDM\"),"
+ "\n(25,\"Other\"),"
+ "\n(26,\"Casting Machining\"),"
+ "\n(27,\"Extrusion Machining\"),"
+ "\n(28,\"Jigs and Fixtures\"),"
+ "\n(29,\"Tool & Die Manufacturing\"),"
+ "\n(30,\"CNC Machining\"),"
+ "\n(31,\"Gear Manufacturing\"),"
+ "\n(32,\"Thread Grinding\"),"
+ "\n(33,\"Forging Machining\"),"
+ "\n(34,\"Micro Machining\"),"
+ "\n(35,\"Thread Rolling\"),"
+ "\n(36,\"Jigs and Fixtures\");"
+ "\n"
+ "\nCREATE TABLE moldorprocesstype ("
+ "\n  id INT PRIMARY KEY,"
+ "\n  MoldOrProcessTypeName VARCHAR(255)"
+ "\n);"
+ "\nINSERT INTO moldorprocesstype VALUES "
+ "\n(1,\"Blow Molding\"),"
+ "\n(2,\"Compression Molding\"),"
+ "\n(3,\"Die Casting\"),"
+ "\n(4,\"Injection Molding\"),"
+ "\n(5,\"Investment Casting\"),"
+ "\n(6,\"Permanent Mold Casting\"),"
+ "\n(7,\"Powder Metal Molding\"),"
+ "\n(8,\"Rotational Molding\"),"
+ "\n(9,\"Sand Casting\"),"
+ "\n(10,\"Thermoforming\"),"
+ "\n(11,\"Transfer Molding\"),"
+ "\n(12,\"Other\");"
+ "\n"
+ "\nCREATE TABLE partlengthvaluelist ("
+ "\n  id INT PRIMARY KEY,"
+ "\n  LengthValue VARCHAR(255)"
+ "\n);"
+ "\nINSERT INTO partlengthvaluelist VALUES "
+ "\n(1,\"less than 1in\"),"
+ "\n(2,\"1in - 3in\"),"
+ "\n(3,\"3in - 6in\"),"
+ "\n(4,\"6in - 48in\"),"
+ "\n(5,\"Greater than 48in\");"
+ "\n"
+ "\nCREATE TABLE edmcapability ("
+ "\n  id INT PRIMARY KEY,"
+ "\n  EDMCapabilitiesName VARCHAR(255)"
+ "\n);"
+ "\nINSERT INTO edmcapability VALUES "
+ "\n(1,\"Electrode EDM\"),"
+ "\n(2,\"Wire EDM\"),"
+ "\n(3,\"Small Hole EDM\");"
+ "\n"
+ "\nCREATE TABLE servicesandconsultantscategory ("
+ "\n  id INT PRIMARY KEY,"
+ "\n  CateoryName VARCHAR(255),"
+ "\n  ParentID INT,"
+ "\n  isLeaf INT,"
+ "\n  FOREIGN KEY (ParentID) REFERENCES servicesandconsultantscategory(id)"
+ "\n);"
+ "\nINSERT INTO servicesandconsultantscategory VALUES "
+ "\n(1,\"Contract Manufacturing And Fabrication\",1,0),"
+ "\n(2,\"Part Fabrication Services\",1,0),"
+ "\n(3,\"Mold Making Services\",2,1),"
+ "\n(5,\"EDM Machining Services\",6,1),"
+ "\n(6,\"Machine Shop Services\",1,1);"
+ "\n"
+ "\nCREATE TABLE supplier ("
+ "\n  id INT PRIMARY KEY,"
+ "\n  Source VARCHAR(255),"
+ "\n  CompanyInfo VARCHAR(255)"
+ "\n);"
+ "\nINSERT INTO supplier VALUES "
+ "\n(2,\"Apex\",\"has great experiences.\"),"
+ "\n(3,\"Maudlin & Son\",\"can do many kinds of works.\"),"
+ "\n(4,\"Peridot\",\"will simplify your supply chain.\"),"
+ "\n(5,\"3-D Service\",\"specializes in making mold for the auto industry.\"),"
+ "\n(6,\"Control Plastics\",\"is your sourcing destination.\");"
+ "\n"
+ "\nCREATE TABLE service ("
+ "\n  id INT PRIMARY KEY,"
+ "\n  ServiceName VARCHAR(255)"
+ "\n);"
+ "\nINSERT INTO service VALUES "
+ "\n(2,\"Design Assistance\"),"
+ "\n(3,\"Just-in-Time Delivery\"),"
+ "\n(6,\"High Volume Production\"),"
+ "\n(7,\"Prototype Services\"),"
+ "\n(8,\"Reverse Engineering\"),"
+ "\n(10,\"CAD/CAM Support\"),"
+ "\n(15,\"Model Making\"),"
+ "\n(16,\"Production Facilities\"),"
+ "\n(17,\"Prototyping\"),"
+ "\n(18,\"Repair / Maintenance\"),"
+ "\n(19,\"Low Volume Production\"),"
+ "\n(20,\"Mold Texturing\"),"
+ "\n(23,\"Other\"),"
+ "\n(24,\"Assembly Services\"),"
+ "\n(25,\"Field Machining\");"
+ "\n"
+ "\n"
+ "\n"
+ "\nCREATE TABLE servicebycategory ("
+ "\n  id INT PRIMARY KEY,"
+ "\n  ServiceID INT,"
+ "\n  ServiceCategoryID INT,"
+ "\n  FOREIGN KEY (ServiceCategoryID) REFERENCES servicesandconsultantscategory (id),"
+ "\n  FOREIGN KEY (ServiceID) REFERENCES service (id) "
+ "\n);"
+ "\n"
+ "\nINSERT INTO servicebycategory VALUES "
+ "\n(1,2,5),"
+ "\n(2,3,5),"
+ "\n(3,19,5),"
+ "\n(4,6,5),"
+ "\n(5,10,5),"
+ "\n(6,8,5),"
+ "\n(7,7,5),"
+ "\n(8,23,5),"
+ "\n(9,2,3),"
+ "\n(10,10,3),"
+ "\n(11,20,3),"
+ "\n(12,18,3),"
+ "\n(13,17,3),"
+ "\n(14,16,3),"
+ "\n(15,15,3),"
+ "\n(16,24,6),"
+ "\n(17,3,6),"
+ "\n(18,6,6),"
+ "\n(19,23,6),"
+ "\n(20,25,6),"
+ "\n(21,7,6),"
+ "\n(22,10,6),"
+ "\n(23,2,6),"
+ "\n(24,19,6),"
+ "\n(25,8,6);"
+ "\n"
+ "\nCREATE TABLE servicedetails ("
+ "\n  id INT PRIMARY KEY,"
+ "\n  ServiceDetailsName VARCHAR(255),"
+ "\n  Category INT,"
+ "\n  FOREIGN KEY (Category) REFERENCES servicesandconsultantscategory (id) "
+ "\n);"
+ "\nINSERT INTO servicedetails VALUES "
+ "\n(3,\"Supplier_2 EDM Machining Service\",5),"
+ "\n(4,\"Supplier_3 EDM Machining Service\",5),"
+ "\n(5,\"Supplier_4 Machine Shop Service\",6),"
+ "\n(6,\"Supplier_4 EDM Machining Service\",5),"
+ "\n(7,\"Supplier_2 Mold Making Service\",3),"
+ "\n(8,\"Supplier_5 Mold Making Service\",3),"
+ "\n(9,\"Supplier_6 Mold Making Service\",3),"
+ "\n(10,\"Supplier_5 Maching Shop Service\",6);"
+ "\n"
+ "\n"
+ "\n"
+ "\nCREATE TABLE supplierservicedetails ("
+ "\n  id INT PRIMARY KEY,"
+ "\n  SupplierID INT,"
+ "\n  ServiceDetailsID INT,"
+ "\n  FOREIGN KEY (ServiceDetailsID) REFERENCES servicedetails (id),"
+ "\n  FOREIGN KEY (SupplierID) REFERENCES supplier (id) "
+ "\n);"
+ "\nINSERT INTO supplierservicedetails VALUES "
+ "\n(4,2,3),"
+ "\n(5,3,4),"
+ "\n(6,4,5),"
+ "\n(7,4,6),"
+ "\n(8,2,7),"
+ "\n(9,5,8),"
+ "\n(10,6,9);"
+ "\n"
+ "\nCREATE TABLE edmmachiningservicedetails ("
+ "\n  id INT PRIMARY KEY,"
+ "\n  ServiceDetailsID INT,"
+ "\n  DoMicroMachining INT,"
+ "\n  FOREIGN KEY (ServiceDetailsID) REFERENCES servicedetails (id) "
+ "\n);"
+ "\nINSERT INTO edmmachiningservicedetails VALUES "
+ "\n(2,3,1),"
+ "\n(3,4,0),"
+ "\n(4,6,1);"
+ "\n"
+ "\nCREATE TABLE edmmachiningservicedetailscapabilities ("
+ "\n  id INT PRIMARY KEY,"
+ "\n  EDMMachiningServiceDetailsID INT,"
+ "\n  EDMCapabilityID INT,"
+ "\n  FOREIGN KEY (EDMMachiningServiceDetailsID) REFERENCES edmmachiningservicedetails (id),"
+ "\n  FOREIGN KEY (EDMCapabilityID) REFERENCES edmcapability (id) "
+ "\n);"
+ "\nINSERT INTO edmmachiningservicedetailscapabilities VALUES "
+ "\n(3,2,1),"
+ "\n(4,3,2),"
+ "\n(5,2,3),"
+ "\n(6,2,2),"
+ "\n(7,4,1),"
+ "\n(8,4,2),"
+ "\n(9,4,3);"
+ "\n"
+ "\nCREATE TABLE edmmachiningservicedetailsmaterials ("
+ "\n  id INT PRIMARY KEY,"
+ "\n  EDMMachiningServiceDetailsID INT,"
+ "\n  MaterialID INT,"
+ "\n  FOREIGN KEY (EDMMachiningServiceDetailsID) REFERENCES edmmachiningservicedetails (id),"
+ "\n  FOREIGN KEY (MaterialID) REFERENCES material (id) "
+ "\n);"
+ "\nINSERT INTO edmmachiningservicedetailsmaterials VALUES "
+ "\n(7,2,2),"
+ "\n(8,2,7),"
+ "\n(9,2,4),"
+ "\n(10,2,5),"
+ "\n(11,2,6),"
+ "\n(12,2,8),"
+ "\n(13,3,1),"
+ "\n(14,3,2),"
+ "\n(15,3,7),"
+ "\n(16,3,4),"
+ "\n(17,3,5),"
+ "\n(18,3,6),"
+ "\n(19,3,8),"
+ "\n(20,4,1),"
+ "\n(21,4,7),"
+ "\n(22,4,4),"
+ "\n(23,4,5),"
+ "\n(24,4,6),"
+ "\n(25,4,8),"
+ "\n(26,2,1);"
+ "\n"
+ "\nCREATE TABLE edmmachiningservicedetailspartlengths ("
+ "\n  id INT PRIMARY KEY,"
+ "\n  EDMMachiningServiceDetailsID INT,"
+ "\n  PartLengthValueListID INT,"
+ "\n  FOREIGN KEY (PartLengthValueListID) REFERENCES partlengthvaluelist (id),"
+ "\n  FOREIGN KEY (EDMMachiningServiceDetailsID) REFERENCES edmmachiningservicedetails (id) "
+ "\n);"
+ "\nINSERT INTO edmmachiningservicedetailspartlengths VALUES "
+ "\n(1,4,1),"
+ "\n(2,4,2),"
+ "\n(3,4,3),"
+ "\n(4,2,1),"
+ "\n(5,3,4),"
+ "\n(6,2,5);"
+ "\n"
+ "\nCREATE TABLE edmmachiningservicedetailsservices ("
+ "\n  id INT PRIMARY KEY,"
+ "\n  EDMMachiningServiceDetailsID INT,"
+ "\n  ServiceID INT,"
+ "\n  FOREIGN KEY (EDMMachiningServiceDetailsID) REFERENCES edmmachiningservicedetails (id),"
+ "\n  FOREIGN KEY (ServiceID) REFERENCES service (id) "
+ "\n);"
+ "\nINSERT INTO edmmachiningservicedetailsservices VALUES "
+ "\n(7,2,2),"
+ "\n(8,2,3),"
+ "\n(9,2,7),"
+ "\n(10,2,19),"
+ "\n(11,2,6),"
+ "\n(12,3,10),"
+ "\n(13,3,3),"
+ "\n(14,3,19),"
+ "\n(15,3,6),"
+ "\n(16,3,8),"
+ "\n(17,4,10),"
+ "\n(18,4,2),"
+ "\n(19,4,7),"
+ "\n(20,4,19),"
+ "\n(21,4,6),"
+ "\n(22,4,8),"
+ "\n(23,2,10),"
+ "\n(24,2,8);"
+ "\n"
+ "\nCREATE TABLE edmmachiningservicedetailsspecialtymachinings ("
+ "\n  id INT PRIMARY KEY,"
+ "\n  EDMMachiningServiceDetailsID INT,"
+ "\n  MachiningCapabilityID INT,"
+ "\n  FOREIGN KEY (EDMMachiningServiceDetailsID) REFERENCES edmmachiningservicedetails (id),"
+ "\n  FOREIGN KEY (MachiningCapabilityID) REFERENCES machiningcapability (id) "
+ "\n);"
+ "\nINSERT INTO edmmachiningservicedetailsspecialtymachinings VALUES "
+ "\n(1,4,29),"
+ "\n(3,2,29),"
+ "\n(4,2,28),"
+ "\n(5,3,28);"
+ "\n"
+ "\nCREATE TABLE machineshopservicedetails ("
+ "\n  id INT PRIMARY KEY,"
+ "\n  ServiceDetailsID INT,"
+ "\n  FOREIGN KEY (ServiceDetailsID) REFERENCES servicedetails (id) "
+ "\n);"
+ "\nINSERT INTO machineshopservicedetails VALUES "
+ "\n(1,5),"
+ "\n(2,10);"
+ "\n"
+ "\nCREATE TABLE machineshopservicedetailscapability ("
+ "\n  id INT PRIMARY KEY,"
+ "\n  MachineShopServiceDetailsID INT,"
+ "\n  MachiningCapabilityID INT,"
+ "\n  isSpecialty INT,"
+ "\n  FOREIGN KEY (MachiningCapabilityID) REFERENCES machiningcapability (id),"
+ "\n  FOREIGN KEY (MachineShopServiceDetailsID) REFERENCES machineshopservicedetails (id) "
+ "\n);"
+ "\nINSERT INTO machineshopservicedetailscapability VALUES "
+ "\n(14,1,1,0),"
+ "\n(24,1,2,0),"
+ "\n(23,1,7,0),"
+ "\n(22,1,8,0),"
+ "\n(15,1,9,0),"
+ "\n(25,1,10,0),"
+ "\n(18,1,12,0),"
+ "\n(19,1,14,0),"
+ "\n(20,1,15,0),"
+ "\n(27,1,16,0),"
+ "\n(16,1,17,0),"
+ "\n(21,1,24,0),"
+ "\n(31,1,28,1),"
+ "\n(32,1,29,1),"
+ "\n(17,1,30,0),"
+ "\n(30,1,31,1),"
+ "\n(29,1,34,1),"
+ "\n(26,1,35,0),"
+ "\n(34,2,1,0),"
+ "\n(33,2,3,0),"
+ "\n(42,2,4,0),"
+ "\n(40,2,6,0),"
+ "\n(43,2,7,0),"
+ "\n(35,2,9,0),"
+ "\n(38,2,13,0),"
+ "\n(36,2,17,0),"
+ "\n(39,2,21,0),"
+ "\n(41,2,24,0),"
+ "\n(37,2,30,0);"
+ "\n"
+ "\nCREATE TABLE machineshopservicedetailsmaterials ("
+ "\n  id INT PRIMARY KEY,"
+ "\n  MachineShopServiceDetailsID INT,"
+ "\n  MaterialID INT,"
+ "\n  FOREIGN KEY (MaterialID) REFERENCES material (id),"
+ "\n  FOREIGN KEY (MachineShopServiceDetailsID) REFERENCES machineshopservicedetails (id) "
+ "\n);"
+ "\nINSERT INTO machineshopservicedetailsmaterials VALUES "
+ "\n(3,1,1),"
+ "\n(4,1,2),"
+ "\n(5,1,7),"
+ "\n(6,1,4),"
+ "\n(7,1,5),"
+ "\n(8,1,6),"
+ "\n(9,1,8),"
+ "\n(10,2,1),"
+ "\n(11,2,4),"
+ "\n(12,2,5);"
+ "\n"
+ "\nCREATE TABLE machineshopservicedetailsservices ("
+ "\n  id INT PRIMARY KEY,"
+ "\n  MachineShopServiceDetailsID INT,"
+ "\n  ServiceID INT,"
+ "\n  FOREIGN KEY (MachineShopServiceDetailsID) REFERENCES machineshopservicedetails (id),"
+ "\n  FOREIGN KEY (ServiceID) REFERENCES service (id) "
+ "\n);"
+ "\nINSERT INTO machineshopservicedetailsservices VALUES "
+ "\n(2,1,24),"
+ "\n(3,1,25),"
+ "\n(4,1,10),"
+ "\n(5,1,2),"
+ "\n(6,1,3),"
+ "\n(7,1,7),"
+ "\n(8,1,19),"
+ "\n(9,1,6),"
+ "\n(10,1,8),"
+ "\n(11,2,24),"
+ "\n(12,2,10),"
+ "\n(13,2,2),"
+ "\n(14,2,7),"
+ "\n(15,2,19);"
+ "\n"
+ "\nCREATE TABLE machiningcapabilitybycategory ("
+ "\n  id INT PRIMARY KEY,"
+ "\n  MachiningCapabilityID INT,"
+ "\n  ServiceCategoryID INT,"
+ "\n  isSpecialty INT,"
+ "\n  FOREIGN KEY (MachiningCapabilityID) REFERENCES machiningcapability (id),"
+ "\n  FOREIGN KEY (ServiceCategoryID) REFERENCES servicesandconsultantscategory (id) "
+ "\n);"
+ "\nINSERT INTO machiningcapabilitybycategory VALUES "
+ "\n(1,1,6,0),"
+ "\n(4,2,6,0),"
+ "\n(7,3,6,0),"
+ "\n(10,4,6,0),"
+ "\n(13,5,6,0),"
+ "\n(16,6,6,0),"
+ "\n(19,7,6,0),"
+ "\n(22,8,6,0),"
+ "\n(2,9,6,0),"
+ "\n(5,10,6,0),"
+ "\n(8,11,6,0),"
+ "\n(11,12,6,0),"
+ "\n(14,13,6,0),"
+ "\n(17,14,6,0),"
+ "\n(20,15,6,0),"
+ "\n(23,16,6,0),"
+ "\n(3,17,6,0),"
+ "\n(6,18,6,0),"
+ "\n(9,19,6,0),"
+ "\n(12,20,6,0),"
+ "\n(15,21,6,0),"
+ "\n(18,22,6,0),"
+ "\n(21,24,6,0),"
+ "\n(24,25,6,0),"
+ "\n(25,26,6,1),"
+ "\n(28,27,6,1),"
+ "\n(36,28,5,1),"
+ "\n(31,28,6,1),"
+ "\n(35,29,5,1),"
+ "\n(34,29,6,1),"
+ "\n(26,30,6,1),"
+ "\n(29,31,6,1),"
+ "\n(32,32,6,1),"
+ "\n(27,33,6,1),"
+ "\n(30,34,6,1),"
+ "\n(33,35,6,1);"
+ "\n"
+ "\nCREATE TABLE materialbyservicecategory ("
+ "\n  id INT PRIMARY KEY,"
+ "\n  MaterialID INT,"
+ "\n  ServiceCateogryID INT,"
+ "\n  FOREIGN KEY (MaterialID) REFERENCES material (id),"
+ "\n  FOREIGN KEY (ServiceCateogryID) REFERENCES servicesandconsultantscategory (id) "
+ "\n);"
+ "\nINSERT INTO materialbyservicecategory VALUES "
+ "\n(1,1,5),"
+ "\n(2,2,5),"
+ "\n(3,4,5),"
+ "\n(4,5,5),"
+ "\n(5,6,5),"
+ "\n(6,7,5),"
+ "\n(7,8,5),"
+ "\n(9,1,6),"
+ "\n(10,2,6),"
+ "\n(11,4,6),"
+ "\n(12,5,6),"
+ "\n(13,6,6),"
+ "\n(14,7,6),"
+ "\n(15,8,6),"
+ "\n(16,9,6),"
+ "\n(17,11,6),"
+ "\n(18,10,6);"
+ "\n"
+ "\nCREATE TABLE moldmakingservicedetails ("
+ "\n  id INT PRIMARY KEY,"
+ "\n  ServiceDetailsID INT,"
+ "\n  FOREIGN KEY (ServiceDetailsID) REFERENCES servicedetails (id) "
+ "\n);"
+ "\nINSERT INTO moldmakingservicedetails VALUES "
+ "\n(1,7),"
+ "\n(2,8),"
+ "\n(3,9);"
+ "\n"
+ "\nCREATE TABLE moldmakingservicedetailsindustryserved ("
+ "\n  id INT PRIMARY KEY,"
+ "\n  MoldMakingServiceDetailID INT,"
+ "\n  IndustryID INT,"
+ "\n  FOREIGN KEY (IndustryID) REFERENCES industry (id),"
+ "\n  FOREIGN KEY (MoldMakingServiceDetailID) REFERENCES moldmakingservicedetails (id) "
+ "\n);"
+ "\n"
+ "\nINSERT INTO moldmakingservicedetailsindustryserved VALUES "
+ "\n(1,1,1),"
+ "\n(2,1,3),"
+ "\n(3,1,5),"
+ "\n(4,1,6),"
+ "\n(5,1,7),"
+ "\n(6,1,8),"
+ "\n(7,1,9),"
+ "\n(8,1,11),"
+ "\n(9,2,2),"
+ "\n(10,3,1),"
+ "\n(11,3,3),"
+ "\n(12,3,4),"
+ "\n(13,3,5),"
+ "\n(14,3,6),"
+ "\n(15,3,7),"
+ "\n(16,3,8),"
+ "\n(17,3,9),"
+ "\n(18,3,10),"
+ "\n(19,3,11);"
+ "\n"
+ "\nCREATE TABLE moldmakingservicedetailsmoldorprocesstype ("
+ "\n  id INT PRIMARY KEY,"
+ "\n  MoldMakingServiceDetailsID INT,"
+ "\n  MoldMakingCapabilityID INT,"
+ "\n  FOREIGN KEY (MoldMakingCapabilityID) REFERENCES moldorprocesstype (id),"
+ "\n  FOREIGN KEY (MoldMakingServiceDetailsID) REFERENCES moldmakingservicedetails (id) "
+ "\n);"
+ "\nINSERT INTO moldmakingservicedetailsmoldorprocesstype VALUES "
+ "\n(1,1,2),"
+ "\n(2,1,6),"
+ "\n(3,1,7),"
+ "\n(4,1,9),"
+ "\n(5,1,10),"
+ "\n(6,1,11),"
+ "\n(7,2,4),"
+ "\n(8,3,2),"
+ "\n(9,3,3),"
+ "\n(10,3,4),"
+ "\n(11,3,5),"
+ "\n(12,3,6),"
+ "\n(13,3,7),"
+ "\n(14,3,9),"
+ "\n(15,3,10);"
+ "\n"
+ "\nCREATE TABLE moldmakingservicedetailsservices ("
+ "\n  id INT PRIMARY KEY,"
+ "\n  MoldMakingServiceDetailsID INT,"
+ "\n  ServiceID INT,"
+ "\n  FOREIGN KEY (MoldMakingServiceDetailsID) REFERENCES moldmakingservicedetails (id),"
+ "\n  FOREIGN KEY (ServiceID) REFERENCES service (id) "
+ "\n);"
+ "\nINSERT INTO moldmakingservicedetailsservices VALUES "
+ "\n(1,1,15),"
+ "\n(2,1,20),"
+ "\n(3,1,16),"
+ "\n(4,1,17),"
+ "\n(5,1,18),"
+ "\n(6,1,10),"
+ "\n(7,1,2),"
+ "\n(8,2,15),"
+ "\n(9,2,16),"
+ "\n(10,2,17),"
+ "\n(11,2,18),"
+ "\n(12,2,10),"
+ "\n(13,2,2),"
+ "\n(14,3,20),"
+ "\n(15,3,16),"
+ "\n(16,3,10),"
+ "\n(17,3,2);"
+ "\n";



static String a_str = "CREATE TABLE unitcode ("
		+ "\n  id INT PRIMARY KEY,"
		+ "\n  Code VARCHAR(255),"
		+ "\n  Description VARCHAR(255)"
		+ "\n);"
		+ "\nINSERT INTO unitcode VALUES "
		+ "\n(1,\"EA\",\"Each part/piece count\"),"
		+ "\n(2,\"Thousands\",\"1000 parts/pieces count\"),"
		+ "\n(3,\"Inch\",\"Length measure in inches\"),"
		+ "\n(4,\"mm\",\"Length measure in millimeters\"),"
		+ "\n(0,\"NULL\",\"No unit\"), //added"
		+ "\n(999,\"NULL - WTF\", \"Possible error\"); //added"
		+ "\n"
		+ "\nCREATE TABLE productorservicecategory ("
		+ "\n  id INT PRIMARY KEY,"
		+ "\n  Category_Name VARCHAR(255),"
		+ "\n  Parent_id INT,"
		+ "\n  isLeaf INT,"
		+ "\n  FOREIGN KEY (Parent_id) REFERENCES productorservicecategory (id)"
		+ "\n);"
		+ "\nINSERT INTO productorservicecategory VALUES "
		+ "\n(1,\"Custom Manufacturing & Fabricating\",1,0),"
		+ "\n(2,\"Machining\",1,0),"
		+ "\n(3,\"General machining\",2,0),"
		+ "\n(4,\"Complex & Difficult Machining\",3,0),"
		+ "\n(6,\"Sinker EDM\",13,1),"
		+ "\n(7,\"Ram EDM\",13,1),"
		+ "\n(8,\"Machinery Tools & Supplies\",8,0),"
		+ "\n(9,\"Dies & Molds\",8,0),"
		+ "\n(10,\"Injection Molds\",9,1),"
		+ "\n(12,\"CNC Machining\",2,1),"
		+ "\n(13,\"EDM\",2,1),"
		+ "\n(14,\"Wire EDM\",13,1),"
		+ "\n(15,\"Small Hole EDM\",13,1),"
		+ "\n(16,\"Micro Hole EDM\",13,1),"
		+ "\n(17,\"High Speed Small Hole EDM\",13,1),"
		+ "\n(18,\"Forging Dies\",9,1),"
		+ "\n(19,\"Extrusion Dies\",9,1),"
		+ "\n(20,\"Rotary Dies\",9,0);"
		+ "\n"
		+ "\nCREATE TABLE equipmenttype ("
		+ "\n  id INT PRIMARY KEY,"
		+ "\n  EquipmentType_Name VARCHAR(255)"
		+ "\n);"
		+ "\nINSERT INTO equipmenttype VALUES "
		+ "\n(2,\"CNC 3-axis Milling Machine\"),"
		+ "\n(3,\"CNC 4-axis Milling Machine\"),"
		+ "\n(1,\"EDM\"),"
		+ "\n(8,\"Engraving Machine\"),"
		+ "\n(7,\"Honing Machine\"),"
		+ "\n(9,\"Jig Grinder\"),"
		+ "\n(4,\"Lathe\"),"
		+ "\n(6,\"Sinker EDM\"),"
		+ "\n(5,\"Surface Grinder\"),"
		+ "\n(10,\"Verticle CNC Milling Machine\");"
		+ "\n"
		+ "\nCREATE TABLE industry ("
		+ "\n  id INT PRIMARY KEY,"
		+ "\n  Industry_Name VARCHAR(255)"
		+ "\n);"
		+ "\nINSERT INTO industry VALUES "
		+ "\n(1,\"Aerospace\"),"
		+ "\n(2,\"Automotive\"),"
		+ "\n(6,\"Building/Construction\"),"
		+ "\n(4,\"Commercial\"),"
		+ "\n(7,\"Communication\"),"
		+ "\n(8,\"Consumer Goods\"),"
		+ "\n(9,\"Electrical\"),"
		+ "\n(5,\"Electrical Connectors\"),"
		+ "\n(10,\"Electronic\"),"
		+ "\n(11,\"Food Processing\"),"
		+ "\n(12,\"Industrial\"),"
		+ "\n(13,\"Marine\"),"
		+ "\n(3,\"Medical\"),"
		+ "\n(14,\"Military/Government\"),"
		+ "\n(15,\"Music\"),"
		+ "\n(16,\"Optical\"),"
		+ "\n(17,\"Recreational Vehicle\");"
		+ "\n"
		+ "\nCREATE TABLE material ("
		+ "\n  id INT PRIMARY KEY,"
		+ "\n  Material_Name VARCHAR(255)"
		+ "\n);"
		+ "\nINSERT INTO material VALUES "
		+ "\n(1,\"4140 Alloy Steels\"),"
		+ "\n(2,\"A-2 Tool Steel\"),"
		+ "\n(3,\"H-13 Tool Steel\"),"
		+ "\n(4,\"Aluminum\"),"
		+ "\n(5,\"Stainless Steel\"),"
		+ "\n(6,\"Titanium\"),"
		+ "\n(7,\"Tool Steel\"),"
		+ "\n(8,\"Brass\"),"
		+ "\n(9,\"Cobalt\"),"
		+ "\n(10,\"A-6 Tool Steel\"),"
		+ "\n(11,\"Chrome\"),"
		+ "\n(12,\"Columbium\"),"
		+ "\n(13,\"Stainless Steel 300 Series\"),"
		+ "\n(14,\"Titanium Alloy Ti 6AI-4V\"),"
		+ "\n(15,\"Titanium Alloy Ti 6AI-4V ELI\"),"
		+ "\n(16,\"Titanium Alloy CP2\"),"
		+ "\n(17,\"Titanium Alloy CP4\"),"
		+ "\n(18,\"Carbon Steel\"),"
		+ "\n(19,\"Plastics\"),"
		+ "\n(20,\"Ferrous\"),"
		+ "\n(21,\"Non-Ferrous\"),"
		+ "\n(22,\"Castings\"),"
		+ "\n(23,\"Forgings\"),"
		+ "\n(24,\"Extrusions\"),"
		+ "\n(25,\"Alloy Steel\"),"
		+ "\n(26,\"S7 Tool Steel\"),"
		+ "\n(27,\"M2 Tool Steel\"),"
		+ "\n(28,\"D2 Tool Steel\"),"
		+ "\n(29,\"4130 Tool Steel\"),"
		+ "\n(30,\"Tool Steel 4340\"),"
		+ "\n(31,\"300 Stainless Steel\"),"
		+ "\n(32,\"Stainless Steel 302\"),"
		+ "\n(33,\"304 Stainless Steel\"),"
		+ "\n(34,\"316 Stainless Steel\"),"
		+ "\n(35,\"15-4 Stainless Steel\"),"
		+ "\n(36,\"17-4 Stainless Steel\"),"
		+ "\n(37,\"Others\"),"
		+ "\n(38,\"CR/HR Steel\"),"
		+ "\n(39,\"Pre-hardened Steel\"),"
		+ "\n(40,\"Fully Hardened Tool Steel\"),"
		+ "\n(41,\"P-20\");"
		+ "\n"
		+ "\nCREATE TABLE moldtypes ("
		+ "\n  id INT PRIMARY KEY,"
		+ "\n  MoldTypes_Name VARCHAR(255)"
		+ "\n);"
		+ "\nINSERT INTO moldtypes VALUES "
		+ "\n(1,\"Blow Molds (Extrusion or Injection/Blow)\"),"
		+ "\n(7,\"Collapsible Core\"),"
		+ "\n(8,\"Die Cast Molds\"),"
		+ "\n(2,\"Hot Runners\"),"
		+ "\n(3,\"Inserts Only\"),"
		+ "\n(4,\"Liquid Silicone Molds\"),"
		+ "\n(9,\"Multi-Cavity/Family Injection Molds\"),"
		+ "\n(5,\"Plastic Injection\"),"
		+ "\n(6,\"Transfer/Compression (Rubber or Silicone)\");"
		+ "\n"
		+ "\nCREATE TABLE process ("
		+ "\n  id INT PRIMARY KEY,"
		+ "\n  Process_Name VARCHAR(255)"
		+ "\n);"
		+ "\nINSERT INTO process VALUES "
		+ "\n(1,\"Sinker EDM\"),"
		+ "\n(2,\"Wire EDM\"),"
		+ "\n(3,\"Small Hole EDM\"),"
		+ "\n(4,\"EDM Drilling\"),"
		+ "\n(5,\"Electrode Machining\"),"
		+ "\n(6,\"Plunger EDM\"),"
		+ "\n(7,\"Ram EDM\");"
		+ "\n"
		+ "\nCREATE TABLE supplier ("
		+ "\n  id INT PRIMARY KEY,"
		+ "\n  Source VARCHAR(255),"
		+ "\n  Note VARCHAR(255)"
		+ "\n);"
		+ "\nINSERT INTO supplier VALUES "
		+ "\n(1,\"B&B\",\"\"),"
		+ "\n(2,\"Tecomet\",\"\"),"
		+ "\n(3,\"Astro\",\"\"),"
		+ "\n(4,\"Bobs Design\",\"\"),"
		+ "\n(5,\"Wiegel Tool\",\"\"),"
		+ "\n(6,\"Industrial Tools & Die\",\"\"),"
		+ "\n(7,\"Pro Mold\",\"This supplier has another capability registered under the Injection Molds category, but it is more about molding rather than making the mold. So I excluded that. It also has a separate capability profile about mold design that I excluded.\"),"
		+ "\n(8,\"Klann Plastics and Canyon Plastics\",\"I used the types of molds values from the Canyon Plastics.\");"
		+ "\n"
		+ "\nCREATE TABLE capability ("
		+ "\n  id INT PRIMARY KEY,"
		+ "\n  Capability_Name VARCHAR(255),"
		+ "\n  Parent_id INT,"
		+ "\n  Production_Volume_Min VARCHAR(255),"
		+ "\n  Production_Volume_Max VARCHAR(255),"
		+ "\n  Production_Volume_Min_Unit INT,"
		+ "\n  Production_Volume_Max_Unit INT,"
		+ "\n  Max_Length VARCHAR(255),"
		+ "\n  Max_Length_Unit INT,"
		+ "\n  Tolerance VARCHAR(255),"
		+ "\n  Tolerance_Unit INT,"
		+ "\n  FOREIGN KEY (Max_Length_Unit) REFERENCES unitcode (id), //9"
		+ "\n  FOREIGN KEY (Production_Volume_Min_Unit) REFERENCES unitcode (id), //6"
		+ "\n  FOREIGN KEY (Production_Volume_Max_Unit) REFERENCES unitcode (id), //7"
		+ "\n  FOREIGN KEY (Tolerance_Unit) REFERENCES unitcode (id), //11"
		+ "\n  FOREIGN KEY (Parent_id) REFERENCES capability (id)"
		+ "\n); "
		+ "\nINSERT INTO capability VALUES "
		+ "\n(1,\"CNC Machining\",1,\"NULL\",\"NULL\",0,0,40,999,\"NULL\",0), //huh? has 40, but was null (999)"
		+ "\n(2,\"CNC & Conventional Machining (turning & milling)\", 2, 1, 1, 1, 2, \"NULL\", 0, \"NULL\", 0),"
		+ "\n(3,\"Sinker EDM\",5,\"NULL\",\"NULL\",0,0,\"47.25\",3,\"0.001\",3),"
		+ "\n(4,\"Wire EDM\",5,\"NULL\",\"NULL\",0,0,\"18.25\",3,\"0.005\",3),"
		+ "\n(5,\"EDM\",5,\"NULL\",\"NULL\",0,0,\"NULL\",0,\"NULL\",0),"
		+ "\n(6,\"Electrical Discharge Machining Services\",6,1,1000,1,1,20,3,\"0.0025\",4),"
		+ "\n(7,\"Wire Electrical Discharge Machining\",7,1,1000000,1,1,20,3,\"0.000001\",3),"
		+ "\n(8,\"Custom  Molds for Plastic, Rubber, and Die Cast parts\",8,\"NULL\",\"NULL\",0,0,\"NULL\",0,\"NULL\",0),"
		+ "\n(9,\"Prototype and Production Mold Design & Manufacturing\",9,\"NULL\",\"NULL\",0,0,\"NULL\",0,\"NULL\",0),"
		+ "\n(10,\"Plastic Mold Making Services\",10,\"NULL\",\"NULL\",0,0,\"NULL\",0,\"NULL\",0),"
		+ "\n(11,\"Mold Design and Build\",11,\"NULL\",\"NULL\",0,0,\"NULL\",0,\"NULL\",0);"
		+ "\n"
		+ "\nCREATE TABLE capabilitycategories ("
		+ "\n  id INT PRIMARY KEY,"
		+ "\n  Capability_id INT,"
		+ "\n  ProductOrServiceCategory_id INT,"
		+ "\n  FOREIGN KEY (Capability_id) REFERENCES capability (id),"
		+ "\n  FOREIGN KEY (ProductOrServiceCategory_id) REFERENCES productorservicecategory (id) "
		+ "\n); "
		+ "\nINSERT INTO capabilitycategories VALUES "
		+ "\n(1,1,6),"
		+ "\n(2,1,12),"
		+ "\n(3,2,6),"
		+ "\n(4,2,12),"
		+ "\n(5,3,6),"
		+ "\n(6,4,14),"
		+ "\n(7,5,13),"
		+ "\n(8,6,6),"
		+ "\n(9,6,7),"
		+ "\n(10,6,13),"
		+ "\n(11,7,6),"
		+ "\n(12,7,7),"
		+ "\n(13,7,15),"
		+ "\n(14,7,14),"
		+ "\n(15,2,14),"
		+ "\n(16,8,10),"
		+ "\n(17,9,10),"
		+ "\n(18,10,10),"
		+ "\n(19,11,10);"
		+ "\n"
		+ "\nCREATE TABLE capabilityequipment ("
		+ "\n  id INT PRIMARY KEY,"
		+ "\n  Capability_id INT,"
		+ "\n  EquipmentType_id INT,"
		+ "\n  FOREIGN KEY (Capability_id) REFERENCES capability (id),"
		+ "\n  FOREIGN KEY (EquipmentType_id) REFERENCES equipmenttype (id) "
		+ "\n); "
		+ "\nINSERT INTO capabilityequipment VALUES "
		+ "\n(1,8,2),"
		+ "\n(2,8,3),"
		+ "\n(3,9,2),"
		+ "\n(4,9,3),"
		+ "\n(5,9,1),"
		+ "\n(7,10,4),"
		+ "\n(8,10,5),"
		+ "\n(9,10,6),"
		+ "\n(10,10,7),"
		+ "\n(11,10,8),"
		+ "\n(12,10,10),"
		+ "\n(13,10,9),"
		+ "\n(16,11,10),"
		+ "\n(17,11,1);"
		+ "\n"
		+ "\nCREATE TABLE capabilityindustry ("
		+ "\n  id INT PRIMARY KEY,"
		+ "\n  Capability_id INT,"
		+ "\n  Industry_id INT,"
		+ "\n  FOREIGN KEY (Capability_id) REFERENCES capability (id),"
		+ "\n  FOREIGN KEY (Industry_id) REFERENCES industry (id) "
		+ "\n);"
		+ "\nINSERT INTO capabilityindustry VALUES "
		+ "\n(1,8,1),"
		+ "\n(2,8,2),"
		+ "\n(3,8,3),"
		+ "\n(4,8,4),"
		+ "\n(5,8,5),"
		+ "\n(6,9,1),"
		+ "\n(7,9,2),"
		+ "\n(8,9,3),"
		+ "\n(9,9,5),"
		+ "\n(10,9,4),"
		+ "\n(11,11,1),"
		+ "\n(12,11,6),"
		+ "\n(13,11,7),"
		+ "\n(14,11,8),"
		+ "\n(15,11,9),"
		+ "\n(16,11,10),"
		+ "\n(17,11,11),"
		+ "\n(18,11,12),"
		+ "\n(19,11,13),"
		+ "\n(20,11,3),"
		+ "\n(21,11,14),"
		+ "\n(22,11,15),"
		+ "\n(23,11,16),"
		+ "\n(24,11,17);"
		+ "\n"
		+ "\nCREATE TABLE capabilitymaterials ("
		+ "\n  id INT PRIMARY KEY,"
		+ "\n  Capability_id INT,"
		+ "\n  Material_id INT,"
		+ "\n  FOREIGN KEY (Capability_id) REFERENCES capability (id),"
		+ "\n  FOREIGN KEY (Material_id) REFERENCES material (id) "
		+ "\n); "
		+ "\nINSERT INTO capabilitymaterials VALUES (1,1,1),"
		+ "\n(2,1,2),"
		+ "\n(3,1,3),"
		+ "\n(4,1,4),"
		+ "\n(5,1,5),"
		+ "\n(6,1,6),"
		+ "\n(7,1,7),"
		+ "\n(8,1,10),"
		+ "\n(9,2,4),"
		+ "\n(10,2,8),"
		+ "\n(11,2,12),"
		+ "\n(12,2,13),"
		+ "\n(13,2,14),"
		+ "\n(14,2,15),"
		+ "\n(15,2,16),"
		+ "\n(16,2,17),"
		+ "\n(17,3,18),"
		+ "\n(18,3,5),"
		+ "\n(19,3,6),"
		+ "\n(20,3,4),"
		+ "\n(21,3,8),"
		+ "\n(22,3,19),"
		+ "\n(23,3,20),"
		+ "\n(24,3,21),"
		+ "\n(25,3,22),"
		+ "\n(26,3,23),"
		+ "\n(27,3,24),"
		+ "\n(28,4,4),"
		+ "\n(29,4,5),"
		+ "\n(30,4,6),"
		+ "\n(31,4,8),"
		+ "\n(32,4,18),"
		+ "\n(33,4,19),"
		+ "\n(34,4,20),"
		+ "\n(35,4,21),"
		+ "\n(36,4,22),"
		+ "\n(37,4,23),"
		+ "\n(38,4,24),"
		+ "\n(40,6,25),"
		+ "\n(41,6,4),"
		+ "\n(42,6,8),"
		+ "\n(43,6,18),"
		+ "\n(44,6,9),"
		+ "\n(45,6,5),"
		+ "\n(46,7,25),"
		+ "\n(47,7,4),"
		+ "\n(48,7,8),"
		+ "\n(49,7,18),"
		+ "\n(50,7,5),"
		+ "\n(51,7,6),"
		+ "\n(52,7,9),"
		+ "\n(53,2,6),"
		+ "\n(55,8,2),"
		+ "\n(56,8,26),"
		+ "\n(57,8,27),"
		+ "\n(58,8,3),"
		+ "\n(59,8,28),"
		+ "\n(60,8,29),"
		+ "\n(61,8,30),"
		+ "\n(62,8,31),"
		+ "\n(63,8,32),"
		+ "\n(64,8,33),"
		+ "\n(65,8,34),"
		+ "\n(66,8,35),"
		+ "\n(67,8,36),"
		+ "\n(68,8,38),"
		+ "\n(69,9,2),"
		+ "\n(70,9,26),"
		+ "\n(71,9,27),"
		+ "\n(72,9,3),"
		+ "\n(73,9,28),"
		+ "\n(74,9,29),"
		+ "\n(75,9,30),"
		+ "\n(76,9,31),"
		+ "\n(77,9,32),"
		+ "\n(78,9,33),"
		+ "\n(79,9,34),"
		+ "\n(80,9,35),"
		+ "\n(81,9,36),"
		+ "\n(82,9,38),"
		+ "\n(83,10,4),"
		+ "\n(85,10,39),"
		+ "\n(86,10,40),"
		+ "\n(87,11,3),"
		+ "\n(88,11,41);"
		+ "\n"
		+ "\nCREATE TABLE capabilityprocesses ("
		+ "\n  id INT PRIMARY KEY,"
		+ "\n  Capability_id INT,"
		+ "\n  Process_id INT,"
		+ "\n  FOREIGN KEY (Capability_id) REFERENCES capability (id),"
		+ "\n  FOREIGN KEY (Process_id) REFERENCES process (id) "
		+ "\n);"
		+ "\nINSERT INTO capabilityprocesses VALUES "
		+ "\n(1,1,1),"
		+ "\n(2,1,2),"
		+ "\n(3,2,2),"
		+ "\n(4,2,1),"
		+ "\n(5,2,6),"
		+ "\n(6,2,7),"
		+ "\n(7,3,1),"
		+ "\n(8,3,2),"
		+ "\n(9,3,3),"
		+ "\n(10,4,1),"
		+ "\n(11,4,2),"
		+ "\n(12,4,3),"
		+ "\n(13,6,1),"
		+ "\n(14,6,2),"
		+ "\n(15,6,3),"
		+ "\n(16,7,2),"
		+ "\n(18,7,4),"
		+ "\n(19,7,5),"
		+ "\n(20,7,1);"
		+ "\n"
		+ "\nCREATE TABLE capabilitytypesofmolds ("
		+ "\n  id INT PRIMARY KEY,"
		+ "\n  Capability_id INT,"
		+ "\n  MoldTypes_id INT,"
		+ "\n  FOREIGN KEY (Capability_id) REFERENCES capability (id),"
		+ "\n  FOREIGN KEY (MoldTypes_id) REFERENCES moldtypes (id) "
		+ "\n);"
		+ "\nINSERT INTO capabilitytypesofmolds VALUES "
		+ "\n(1,10,1),"
		+ "\n(2,10,2),"
		+ "\n(3,10,3),"
		+ "\n(4,10,4),"
		+ "\n(5,10,5),"
		+ "\n(6,10,6),"
		+ "\n(7,11,1),"
		+ "\n(8,11,7),"
		+ "\n(9,11,8),"
		+ "\n(10,11,2),"
		+ "\n(11,11,9);"
		+ "\n"
		+ "\nCREATE TABLE suppliercapabilities ("
		+ "\n  id INT PRIMARY KEY,"
		+ "\n  Supplier_id INT,"
		+ "\n  Capability_id INT,"
		+ "\n  FOREIGN KEY (Capability_id) REFERENCES capability (id),"
		+ "\n  FOREIGN KEY (Supplier_id) REFERENCES supplier (id) "
		+ "\n);"
		+ "\nINSERT INTO suppliercapabilities VALUES "
		+ "\n(1,1,1),"
		+ "\n(2,1,2),"
		+ "\n(3,3,3),"
		+ "\n(4,3,4),"
		+ "\n(5,3,5),"
		+ "\n(6,4,6),"
		+ "\n(7,5,7),"
		+ "\n(8,6,8),"
		+ "\n(9,6,9),"
		+ "\n(10,7,10),"
		+ "\n(11,8,11);"
		+ "\n";


private static final String a_str2 = "CREATE TABLE unitcode ("
		+ "\n  id INT PRIMARY KEY,"
		+ "\n  Code VARCHAR(255),"
		+ "\n  Description VARCHAR(255)"
		+ "\n);"
		+ "\nINSERT INTO unitcode VALUES "
		+ "\n(0,\"NULL\",\"No unit\"), //added"
		+ "\n(1,\"EA\",\"Each part/piece count\"),"
		+ "\n(2,\"Thousands\",\"1000 parts/pieces count\"),"
		+ "\n(3,\"Inch\",\"Length measure in inches\"),"
		+ "\n(4,\"mm\",\"Length measure in millimeters\"),"
		+ "\n(5,\"cm\",\"Length measure in centimeters\"); "
		+ "\n"
		+ "\nCREATE TABLE productorservicecategory ("
		+ "\n  id INT PRIMARY KEY,"
		+ "\n  Category_Name VARCHAR(255),"
		+ "\n  Parent_id INT,"
		+ "\n  isConcrete INT,"
		+ "\n  FOREIGN KEY (Parent_id) REFERENCES productorservicecategory (id)"
		+ "\n);"
		+ "\nINSERT INTO productorservicecategory VALUES "
		+ "\n(1,\"Custom Manufacturing & Fabricating\",1,0),"
		+ "\n(2,\"Machining\",1,0),"
		+ "\n(3,\"General machining\",2,0),"
		+ "\n(4,\"Complex & Difficult Machining\",3,0),"
		+ "\n(6,\"Sinker EDM\",13,1),"
		+ "\n(7,\"Ram EDM\",13,1),"
		+ "\n(8,\"Machinery Tools & Supplies\",8,0),"
		+ "\n(9,\"Dies & Molds\",8,0),"
		+ "\n(10,\"Injection Molds\",9,1),"
		+ "\n(12,\"CNC Machining\",2,1),"
		+ "\n(13,\"EDM\",2,1),"
		+ "\n(14,\"Wire EDM\",13,1),"
		+ "\n(15,\"Small Hole EDM\",13,1),"
		+ "\n(16,\"Micro Hole EDM\",13,1),"
		+ "\n(17,\"High Speed Small Hole EDM\",13,1),"
		+ "\n(18,\"Forging Dies\",9,1),"
		+ "\n(19,\"Extrusion Dies\",9,1),"
		+ "\n(20,\"Rotary Dies\",9,0);"
		+ "\n"
		+ "\nCREATE TABLE equipmenttype ("
		+ "\n  id INT PRIMARY KEY,"
		+ "\n  EquipmentType_Name VARCHAR(255)"
		+ "\n);"
		+ "\nINSERT INTO equipmenttype VALUES "
		+ "\n(1,\"EDM\"),"
		+ "\n(2,\"CNC 3-axis Milling Machine\"),"
		+ "\n(3,\"CNC 4-axis Milling Machine\"),"
		+ "\n(4,\"Lathe\"),"
		+ "\n(5,\"Surface Grinder\"),"
		+ "\n(6,\"Sinker EDM\"),"
		+ "\n(7,\"Honing Machine\"),"
		+ "\n(8,\"Engraving Machine\"),"
		+ "\n(9,\"Jig Grinder\"),"
		+ "\n(10,\"Verticle CNC Milling Machine\");"
		+ "\n"
		+ "\nCREATE TABLE industry ("
		+ "\n  id INT PRIMARY KEY,"
		+ "\n  Industry_Name VARCHAR(255)"
		+ "\n);"
		+ "\nINSERT INTO industry VALUES "
		+ "\n(1,\"Aerospace\"),"
		+ "\n(2,\"Automotive\"),"
		+ "\n(3,\"Medical\"),"
		+ "\n(4,\"Commercial\"),"
		+ "\n(5,\"Electrical Connectors\"),"
		+ "\n(6,\"Building/Construction\"),"
		+ "\n(7,\"Communication\"),"
		+ "\n(8,\"Consumer Goods\"),"
		+ "\n(9,\"Electrical\"),"
		+ "\n(10,\"Electronic\"),"
		+ "\n(11,\"Food Processing\"),"
		+ "\n(12,\"Industrial\"),"
		+ "\n(13,\"Marine\"),"
		+ "\n(14,\"Military/Government\"),"
		+ "\n(15,\"Music\"),"
		+ "\n(16,\"Optical\"),"
		+ "\n(17,\"Recreational Vehicle\");"
		+ "\n"
		+ "\nCREATE TABLE material ("
		+ "\n  id INT PRIMARY KEY,"
		+ "\n  Material_Name VARCHAR(255)"
		+ "\n);"
		+ "\nINSERT INTO material VALUES "
		+ "\n(1,\"4140 Alloy Steels\"),"
		+ "\n(2,\"A-2 Tool Steel\"),"
		+ "\n(3,\"H-13 Tool Steel\"),"
		+ "\n(4,\"Aluminum\"),"
		+ "\n(5,\"Stainless Steel\"),"
		+ "\n(6,\"Titanium\"),"
		+ "\n(7,\"Tool Steel\"),"
		+ "\n(8,\"Brass\"),"
		+ "\n(9,\"Cobalt\"),"
		+ "\n(10,\"A-6 Tool Steel\"),"
		+ "\n(11,\"Chrome\"),"
		+ "\n(12,\"Columbium\"),"
		+ "\n(13,\"Stainless Steel 300 Series\"),"
		+ "\n(14,\"Titanium Alloy Ti 6AI-4V\"),"
		+ "\n(15,\"Titanium Alloy Ti 6AI-4V ELI\"),"
		+ "\n(16,\"Titanium Alloy CP2\"),"
		+ "\n(17,\"Titanium Alloy CP4\"),"
		+ "\n(18,\"Carbon Steel\"),"
		+ "\n(19,\"Plastics\"),"
		+ "\n(20,\"Ferrous\"),"
		+ "\n(21,\"Non-Ferrous\"),"
		+ "\n(22,\"Castings\"),"
		+ "\n(23,\"Forgings\"),"
		+ "\n(24,\"Extrusions\"),"
		+ "\n(25,\"Alloy Steel\"),"
		+ "\n(26,\"S7 Tool Steel\"),"
		+ "\n(27,\"M2 Tool Steel\"),"
		+ "\n(28,\"D2 Tool Steel\"),"
		+ "\n(29,\"4130 Tool Steel\"),"
		+ "\n(30,\"Tool Steel 4340\"),"
		+ "\n(31,\"300 Stainless Steel\"),"
		+ "\n(32,\"Stainless Steel 302\"),"
		+ "\n(33,\"304 Stainless Steel\"),"
		+ "\n(34,\"316 Stainless Steel\"),"
		+ "\n(35,\"15-4 Stainless Steel\"),"
		+ "\n(36,\"17-4 Stainless Steel\"),"
		+ "\n(37,\"Others\"),"
		+ "\n(38,\"CR/HR Steel\"),"
		+ "\n(39,\"Pre-hardened Stainless Steel\"),"
		+ "\n(40,\"Fully Hardened Tool Steel\"),"
		+ "\n(41,\"P-20\");"
		+ "\n"
		+ "\nCREATE TABLE moldtypes ("
		+ "\n  id INT PRIMARY KEY,"
		+ "\n  MoldTypes_Name VARCHAR(255)"
		+ "\n);"
		+ "\nINSERT INTO moldtypes VALUES "
		+ "\n(1,\"Blow Molds (Extrusion or Injection/Blow)\"),"
		+ "\n(2,\"Hot Runners\"),"
		+ "\n(3,\"Inserts Only\"),"
		+ "\n(4,\"Liquid Silicone Molds\"),"
		+ "\n(5,\"Plastic Injection\"),"
		+ "\n(6,\"Transfer/Compression (Rubber or Silicone)\"),"
		+ "\n(7,\"Collapsible Core\"),"
		+ "\n(8,\"Die Cast Molds\"),"
		+ "\n(9,\"Multi-Cavity/Family Injection Molds\");"
		+ "\n"
		+ "\nCREATE TABLE process ("
		+ "\n  id INT PRIMARY KEY,"
		+ "\n  Process_Name VARCHAR(255)"
		+ "\n);"
		+ "\nINSERT INTO process VALUES "
		+ "\n(1,\"Sinker EDM\"),"
		+ "\n(2,\"Wire EDM\"),"
		+ "\n(3,\"Small Hole EDM\"),"
		+ "\n(4,\"EDM Drilling\"),"
		+ "\n(5,\"Electrode Machining\"),"
		+ "\n(6,\"Plunger EDM\"),"
		+ "\n(7,\"Ram EDM\");"
		+ "\n"
		+ "\nCREATE TABLE supplier ("
		+ "\n  id INT PRIMARY KEY,"
		+ "\n  Source VARCHAR(255),"
		+ "\n  Note VARCHAR(255)"
		+ "\n);"
		+ "\nINSERT INTO supplier VALUES "
		+ "\n(1,\"B&B\",\"\"),"
		+ "\n(2,\"Tecomet\",\"\"),"
		+ "\n(3,\"Astro\",\"\"),"
		+ "\n(4,\"Bobs Design\",\"\"),"
		+ "\n(5,\"Wiegel Tool\",\"\"),"
		+ "\n(6,\"Industrial Tools & Die\",\"\"),"
		+ "\n(7,\"Pro Mold\",\"This supplier has another capability registered under the Injection Molds category, but it is more about molding rather than making the mold. So I excluded that. It also has a separate capability profile about mold design that I excluded.\"),"
		+ "\n(8,\"Klann Plastics and Canyon Plastics\",\"I used the types of molds values from the Canyon Plastics.\");"
		+ "\n"
		+ "\nCREATE TABLE capability ("
		+ "\n  id INT PRIMARY KEY,"
		+ "\n  Capability_Name VARCHAR(255),"
		+ "\n  Parent_id INT,"
		+ "\n  Production_Volume_Min VARCHAR(255),"
		+ "\n  Production_Volume_Max VARCHAR(255),"
		+ "\n  Production_Volume_Min_Unit INT,"
		+ "\n  Production_Volume_Max_Unit INT,"
		+ "\n  Max_Length VARCHAR(255),"
		+ "\n  Max_Length_Unit INT,"
		+ "\n  Tolerance VARCHAR(255),"
		+ "\n  Tolerance_Unit INT,"
		+ "\n  FOREIGN KEY (Max_Length_Unit) REFERENCES unitcode (id), //9"
		+ "\n  FOREIGN KEY (Production_Volume_Min_Unit) REFERENCES unitcode (id), //6"
		+ "\n  FOREIGN KEY (Production_Volume_Max_Unit) REFERENCES unitcode (id), //7"
		+ "\n  FOREIGN KEY (Tolerance_Unit) REFERENCES unitcode (id), //11"
		+ "\n  FOREIGN KEY (Parent_id) REFERENCES capability (id)"
		+ "\n); "
		+ "\n//cm = 5, inch = 3, mm = 4, thousands = 2, EA = 1"
		+ "\nINSERT INTO capability VALUES "
		+ "\n(1,\"CNC\",1,\"NULL\",\"NULL\",0,0,88,5,\"NULL\",0), "
		+ "\n(2,\"CNC & Conventional Machining (turning & milling)\", 2, 1, 1, 1, 2, \"NULL\", 0, \"NULL\", 0),"
		+ "\n(3,\"Sinker EDM\",5,\"NULL\",\"NULL\",0,0,\"118\",5,\"0.001\",3),"
		+ "\n(4,\"Wire EDM\",5,\"NULL\",\"NULL\",0,0,\"30\",5,\"0.005\",3),"
		+ "\n(5,\"EDM\",5,\"NULL\",\"NULL\",0,0,\"NULL\",0,\"NULL\",0),"
		+ "\n(6,\"Electrical Discharge Machining Services\",6,1,1000,1,1,50,5,\"0.0025\",4),"
		+ "\n(7,\"Wire Electrical Discharge Machining\",7,1,1000000,1,1,50,5,\"0.000001\",3),"
		+ "\n(8,\"Custom  Molds for Plastic, Rubber, and Die Cast parts\",8,\"NULL\",\"NULL\",0,0,\"NULL\",0,\"NULL\",0),"
		+ "\n(9,\"Prototype and Production Mold Design & Manufacturing\",9,\"NULL\",\"NULL\",0,0,\"NULL\",0,\"NULL\",0),"
		+ "\n(10,\"Plastic Mold Making Services\",10,\"NULL\",\"NULL\",0,0,\"NULL\",0,\"NULL\",0),"
		+ "\n(11,\"Mold Design and Build\",11,\"NULL\",\"NULL\",0,0,\"NULL\",0,\"NULL\",0);"
		+ "\n"
		+ "\nCREATE TABLE capabilitycategories ("
		+ "\n  id INT PRIMARY KEY,"
		+ "\n  Capability_id INT,"
		+ "\n  ProductOrServiceCategory_id INT,"
		+ "\n  FOREIGN KEY (Capability_id) REFERENCES capability (id),"
		+ "\n  FOREIGN KEY (ProductOrServiceCategory_id) REFERENCES productorservicecategory (id) "
		+ "\n); "
		+ "\nINSERT INTO capabilitycategories VALUES "
		+ "\n(1,1,6),"
		+ "\n(2,1,12),"
		+ "\n(3,2,6),"
		+ "\n(4,2,12),"
		+ "\n(5,3,6),"
		+ "\n(6,4,14),"
		+ "\n(7,5,13),"
		+ "\n(8,6,6),"
		+ "\n(9,6,7),"
		+ "\n(10,6,13),"
		+ "\n(11,7,6),"
		+ "\n(12,7,7),"
		+ "\n(13,7,15),"
		+ "\n(14,7,14),"
		+ "\n(15,2,14),"
		+ "\n(16,8,10),"
		+ "\n(17,9,10),"
		+ "\n(18,10,10),"
		+ "\n(19,11,10);"
		+ "\n"
		+ "\nCREATE TABLE capabilityequipment ("
		+ "\n  id INT PRIMARY KEY,"
		+ "\n  Capability_id INT,"
		+ "\n  EquipmentType_id INT,"
		+ "\n  FOREIGN KEY (Capability_id) REFERENCES capability (id),"
		+ "\n  FOREIGN KEY (EquipmentType_id) REFERENCES equipmenttype (id) "
		+ "\n); "
		+ "\nINSERT INTO capabilityequipment VALUES "
		+ "\n(1,8,2),"
		+ "\n(2,8,3),"
		+ "\n(3,9,2),"
		+ "\n(4,9,3),"
		+ "\n(5,9,1),"
		+ "\n(7,10,4),"
		+ "\n(8,10,5),"
		+ "\n(9,10,6),"
		+ "\n(10,10,7),"
		+ "\n(11,10,8),"
		+ "\n(12,10,10),"
		+ "\n(13,10,9),"
		+ "\n(16,11,10),"
		+ "\n(17,11,1);"
		+ "\n"
		+ "\nCREATE TABLE capabilityindustry ("
		+ "\n  id INT PRIMARY KEY,"
		+ "\n  Capability_id INT,"
		+ "\n  Industry_id INT,"
		+ "\n  FOREIGN KEY (Capability_id) REFERENCES capability (id),"
		+ "\n  FOREIGN KEY (Industry_id) REFERENCES industry (id) "
		+ "\n);"
		+ "\nINSERT INTO capabilityindustry VALUES "
		+ "\n(1,8,1),"
		+ "\n(2,8,2),"
		+ "\n(3,8,3),"
		+ "\n(4,8,4),"
		+ "\n(5,8,5),"
		+ "\n(6,9,1),"
		+ "\n(7,9,2),"
		+ "\n(8,9,3),"
		+ "\n(9,9,5),"
		+ "\n(10,9,4),"
		+ "\n(11,11,1),"
		+ "\n(12,11,6),"
		+ "\n(13,11,7),"
		+ "\n(14,11,8),"
		+ "\n(15,11,9),"
		+ "\n(16,11,10),"
		+ "\n(17,11,11),"
		+ "\n(18,11,12),"
		+ "\n(19,11,13),"
		+ "\n(20,11,3),"
		+ "\n(21,11,14),"
		+ "\n(22,11,15),"
		+ "\n(23,11,16),"
		+ "\n(24,11,17);"
		+ "\n"
		+ "\nCREATE TABLE capabilitymaterials ("
		+ "\n  id INT PRIMARY KEY,"
		+ "\n  Capability_id INT,"
		+ "\n  Material_id INT,"
		+ "\n  FOREIGN KEY (Capability_id) REFERENCES capability (id),"
		+ "\n  FOREIGN KEY (Material_id) REFERENCES material (id) "
		+ "\n); "
		+ "\nINSERT INTO capabilitymaterials VALUES (1,1,1),"
		+ "\n(2,1,2),"
		+ "\n(3,1,3),"
		+ "\n(4,1,4),"
		+ "\n(5,1,5),"
		+ "\n(6,1,6),"
		+ "\n(7,1,7),"
		+ "\n(8,1,10),"
		+ "\n(9,2,4),"
		+ "\n(10,2,8),"
		+ "\n(11,2,12),"
		+ "\n(12,2,13),"
		+ "\n(13,2,14),"
		+ "\n(14,2,15),"
		+ "\n(15,2,16),"
		+ "\n(16,2,17),"
		+ "\n(17,3,18),"
		+ "\n(18,3,5),"
		+ "\n(19,3,6),"
		+ "\n(20,3,4),"
		+ "\n(21,3,8),"
		+ "\n(22,3,19),"
		+ "\n(23,3,20),"
		+ "\n(24,3,21),"
		+ "\n(25,3,22),"
		+ "\n(26,3,23),"
		+ "\n(27,3,24),"
		+ "\n(28,4,4),"
		+ "\n(29,4,5),"
		+ "\n(30,4,6),"
		+ "\n(31,4,8),"
		+ "\n(32,4,18),"
		+ "\n(33,4,19),"
		+ "\n(34,4,20),"
		+ "\n(35,4,21),"
		+ "\n(36,4,22),"
		+ "\n(37,4,23),"
		+ "\n(38,4,24),"
		+ "\n(40,6,25),"
		+ "\n(41,6,4),"
		+ "\n(42,6,8),"
		+ "\n(43,6,18),"
		+ "\n(44,6,9),"
		+ "\n(45,6,5),"
		+ "\n(46,7,25),"
		+ "\n(47,7,4),"
		+ "\n(48,7,8),"
		+ "\n(49,7,18),"
		+ "\n(50,7,5),"
		+ "\n(51,7,6),"
		+ "\n(52,7,9),"
		+ "\n(53,2,6),"
		+ "\n(55,8,2),"
		+ "\n(56,8,26),"
		+ "\n(57,8,27),"
		+ "\n(58,8,3),"
		+ "\n(59,8,28),"
		+ "\n(60,8,29),"
		+ "\n(61,8,30),"
		+ "\n(62,8,31),"
		+ "\n(63,8,32),"
		+ "\n(64,8,33),"
		+ "\n(65,8,34),"
		+ "\n(66,8,35),"
		+ "\n(67,8,36),"
		+ "\n(68,8,38),"
		+ "\n(69,9,2),"
		+ "\n(70,9,26),"
		+ "\n(71,9,27),"
		+ "\n(72,9,3),"
		+ "\n(73,9,28),"
		+ "\n(74,9,29),"
		+ "\n(75,9,30),"
		+ "\n(76,9,31),"
		+ "\n(77,9,32),"
		+ "\n(78,9,33),"
		+ "\n(79,9,34),"
		+ "\n(80,9,35),"
		+ "\n(81,9,36),"
		+ "\n(82,9,38),"
		+ "\n(83,10,4),"
		+ "\n(85,10,39),"
		+ "\n(86,10,40),"
		+ "\n(87,11,3),"
		+ "\n(88,11,41);"
		+ "\n"
		+ "\nCREATE TABLE capabilityprocesses ("
		+ "\n  id INT PRIMARY KEY,"
		+ "\n  Capability_id INT,"
		+ "\n  Process_id INT,"
		+ "\n  FOREIGN KEY (Capability_id) REFERENCES capability (id),"
		+ "\n  FOREIGN KEY (Process_id) REFERENCES process (id) "
		+ "\n);"
		+ "\nINSERT INTO capabilityprocesses VALUES "
		+ "\n(1,1,1),"
		+ "\n(2,1,2),"
		+ "\n(3,2,2),"
		+ "\n(4,2,1),"
		+ "\n(5,2,6),"
		+ "\n(6,2,7),"
		+ "\n(7,3,1),"
		+ "\n(8,3,2),"
		+ "\n(9,3,3),"
		+ "\n(10,4,1),"
		+ "\n(11,4,2),"
		+ "\n(12,4,3),"
		+ "\n(13,6,1),"
		+ "\n(14,6,2),"
		+ "\n(15,6,3),"
		+ "\n(16,7,2),"
		+ "\n(18,7,4),"
		+ "\n(19,7,5),"
		+ "\n(20,7,1);"
		+ "\n"
		+ "\nCREATE TABLE capabilitytypesofmolds ("
		+ "\n  id INT PRIMARY KEY,"
		+ "\n  Capability_id INT,"
		+ "\n  MoldTypes_id INT,"
		+ "\n  FOREIGN KEY (Capability_id) REFERENCES capability (id),"
		+ "\n  FOREIGN KEY (MoldTypes_id) REFERENCES moldtypes (id) "
		+ "\n);"
		+ "\nINSERT INTO capabilitytypesofmolds VALUES "
		+ "\n(1,10,1),"
		+ "\n(2,10,2),"
		+ "\n(3,10,3),"
		+ "\n(4,10,4),"
		+ "\n(5,10,5),"
		+ "\n(6,10,6),"
		+ "\n(7,11,1),"
		+ "\n(8,11,7),"
		+ "\n(9,11,8),"
		+ "\n(10,11,2),"
		+ "\n(11,11,9);"
		+ "\n"
		+ "\nCREATE TABLE suppliercapabilities ("
		+ "\n  id INT PRIMARY KEY,"
		+ "\n  Supplier_id INT,"
		+ "\n  Capability_id INT,"
		+ "\n  FOREIGN KEY (Capability_id) REFERENCES capability (id),"
		+ "\n  FOREIGN KEY (Supplier_id) REFERENCES supplier (id) "
		+ "\n);"
		+ "\nINSERT INTO suppliercapabilities VALUES "
		+ "\n(1,1,1),"
		+ "\n(2,1,2),"
		+ "\n(3,3,3),"
		+ "\n(4,3,4),"
		+ "\n(5,3,5),"
		+ "\n(6,4,6),"
		+ "\n(7,5,7),"
		+ "\n(8,6,8),"
		+ "\n(9,6,9),"
		+ "\n(10,7,10),"
		+ "\n(11,8,11);"
		+ "\n";





}

