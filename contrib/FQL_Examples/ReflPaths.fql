schema Path1 = {  //This is the graph-indexing schema
	nodes A1,A0;
	attributes att1:A1->string,att0:A0->string;
	arrows src1:A1->A0, tgt1:A1->A0;
	equations;
}


 instance G1 = {
	nodes A0->{a,b,c}, A1->{f,g};
	attributes att0->{(a,a),(b,b),(c,c)},att1->{(f,f),(g,g)};
	arrows src1->{(f,a),(g,b)},tgt1->{(f,b),(g,c)};
} : Path1

schema ReflPath1 = {
	nodes A1,A0;
	attributes att1:A1->string,att0:A0->string;
	arrows src1:A1->A0, tgt1:A1->A0, refl0:A0->A1;
	equations A0.refl0.src1=A0,A0.refl0.tgt1=A0;
}

mapping Reflizer1 = {
	nodes A0->A0, A1->A1;
	attributes att0->att0,att1->att1;
	arrows src1->A1.src1, tgt1->A1.tgt1;
} : Path1 -> ReflPath1

instance Refl_G1=SIGMA Reflizer1 G1

schema Refl1Path2 = {
	nodes A2,A1,A0;
	attributes att1:A1->string,att0:A0->string;
	arrows 
		src2:A2->A1, 
		tgt2:A2->A1, 
		src1:A1->A0, 
		tgt1:A1->A0, 
		refl0:A0->A1;
	equations 
		A2.src2.tgt1=A2.tgt2.src1,
		A0.refl0.src1=A0,A0.refl0.tgt1=A0;
}

mapping UpTo2 = {
	nodes A0->A0,A1->A1;
	attributes att1->att1,att0->att0;
	arrows 
		src1->A1.src1,
		tgt1->A1.tgt1,
		refl0->A0.refl0;
} : ReflPath1 -> Refl1Path2

instance U2R_G1=pi UpTo2 Refl_G1

schema Refl2Path2 = {
	nodes A2,A1,A0;
	attributes att1:A1->string,att0:A0->string;
	arrows 
		src2:A2->A1, 
		tgt2:A2->A1, 
		src1:A1->A0, 
		tgt1:A1->A0, 
		refl0:A0->A1,
		refl1:A1->A2;
	equations 
		A2.src2.tgt1=A2.tgt2.src1,
		A0.refl0.src1=A0,A0.refl0.tgt1=A0,
		A1.refl1.src2=A1,A1.refl1.tgt2=A1;
}

mapping Reflizer2 = {
	nodes A0->A0, A1->A1,A2->A2;
	attributes att0->att0,att1->att1;
	arrows 
		src1->A1.src1, 
		tgt1->A1.tgt1,
		refl0->A0.refl0,
		src2->A2.src2,
		tgt2->A2.tgt2;
} : Refl1Path2 -> Refl2Path2

//instance R2_U2_R_G1 = SIGMA Reflizer2 U2R_G1
